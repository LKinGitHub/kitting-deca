<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_BagCloser" Id="{678bc602-a9e5-4e7d-94ba-1a138b16ef52}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_BagCloser
VAR_INPUT
  ams_net_id: STRING;
END_VAR
VAR_OUTPUT
END_VAR
VAR
	// Variable to be read from the app in python.
	status: BagMachineStatus;
	//bag_detection_status: BagDetectionStatus;
	bag_holder_status: BagHolderStatus;
	bag_status: BagStatus;
	current_bag_cmd: BagCmd;
	current_bag_height_status: BagHeightStatus;

	adsread				: ADSREAD;
	adswrite			: ADSWRITE;
	iMethodTest			: BagMachineStatus;
	bagCloseStatus 		: BagMachineStatus;
  	error_code			: UINT;

	adsArr				: AdsArr;
	iAds				: INT;
	ton_ms				: TON;

	iMachineStatus		: INT;//inArr[0]
	iBagStatus			: INT;//inArr[1]
	
	arr_fb_belt	: ARRAY[0..9] OF fb_interface_bagmachine;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[	adsread(
			NETID:=ams_net_id , 
			PORT:=851 , 
			IDXGRP:=16#00004020 , 
			IDXOFFS:=100 , 
			LEN:= SIZEOF(adsArr.inArr), 
			DESTADDR:= ADR(adsArr.inArr), 
			READ:=, 
			TMOUT:=T#2S , 
			BUSY=> , 
			ERR=> , 
			ERRID=> );
	adswrite(
			NETID:=ams_net_id , 
			PORT:=851, 
			IDXGRP:=16#00004020, 
			IDXOFFS:=200, 
			LEN:=SIZEOF(adsArr.outArr) , 
			SRCADDR:=ADR(adsArr.outArr) , 
			WRITE:= , 
			TMOUT:=T#2S , 
			BUSY=> , 
			ERR=> , 
			ERRID=> );
ton_ms(PT:=T#2MS);			
CASE iAds OF 
	0:
		adsread.READ	:= FALSE;
		adswrite.WRITE	:= FALSE;	
		iAds	:=1;
	1:
		ton_ms.IN	:= TRUE;
		IF ton_ms.Q THEN
			ton_ms.IN	:= FALSE;
			iAds	:=2;
		END_IF
	2:
		adsread.READ	:= TRUE;
		adswrite.WRITE	:= TRUE;
		iAds	:=3;
	3:
		ton_ms.IN	:= TRUE;
		IF ton_ms.Q THEN
			ton_ms.IN	:= FALSE;
			iAds	:=0;
		END_IF	
END_CASE
//inputArr:
//		[0]:machine status;
//		[1]:bag status;
//		[2]:fixture status
//outputArr:
//		[0]:line status;
//		[1]:bag cmd(0: do_nothing, 1:take_bag,2:bag_done_unclamping;);
//		[2]:height detect cmd(0:idle,1:ok,2:ng)
iMachineStatus	:= WORD_TO_INT(adsArr.inArr[0]);
iBagStatus := WORD_TO_INT(adsArr.inArr[1]);
 
adsArr.outArr[1]	:= INT_TO_WORD(current_bag_cmd);
adsArr.outArr[2]	:= INT_TO_WORD(current_bag_height_status);

CASE adsArr.inArr[0] OF
	0:status	:= BagMachineStatus.OFF;
	1:status	:= BagMachineStatus.BUSY;
	2:status	:= BagMachineStatus.READY;
	3:status	:= BagMachineStatus.RESET;
	4:status	:= BagMachineStatus.ERROR;
	5:status	:= BagMachineStatus.STOPPED;
END_CASE
CASE adsArr.inArr[1] OF
	0:bag_status	:= BagStatus.UNKNOWN;
	1:bag_status	:= BagStatus.READY;
	2:bag_status	:= BagStatus.INSERTED;
	3:bag_status	:= BagStatus.REMOVED;
END_CASE
CASE adsArr.inArr[3] OF
	0:bag_holder_status	:= BagHolderStatus.UNKNOWN;
	1:bag_holder_status	:= BagHolderStatus.DOWN;
	2:bag_holder_status	:= BagHolderStatus.UP;
END_CASE


CASE current_bag_cmd OF
	BagCmd.DO_NOTHING:
		;
	BagCmd.INSERT_BAG_HOLDER:
		IF fixture_ready() THEN
			current_bag_cmd	:=0;
		END_IF		
	BagCmd.REMOVE_BAG_HOLDER:
		IF bag_done_unclamping() THEN
			current_bag_cmd	:=0;
		END_IF	
	BagCmd.STOP:
		current_bag_cmd	:= BagCmd.STOP;
		IF status = BagMachineStatus.STOPPED THEN
			current_bag_cmd	:= BagCmd.DO_NOTHING;
		END_IF
		
END_CASE


//
IF GVL.bBagmachine_test THEN
	arr_fb_belt[0](bRun:=adsArr.inArr[4].0,iPM:=1,iBelt:=1);
	arr_fb_belt[1](bRun:=adsArr.inArr[4].1,iPM:=1,iBelt:=0);
	arr_fb_belt[2](bRun:=adsArr.inArr[4].2,iPM:=2,iBelt:=1);
	arr_fb_belt[3](bRun:=adsArr.inArr[4].3,iPM:=2,iBelt:=0);
	arr_fb_belt[4](bRun:=adsArr.inArr[4].4,iPM:=3,iBelt:=1);
	arr_fb_belt[5](bRun:=adsArr.inArr[4].5,iPM:=3,iBelt:=0);
	arr_fb_belt[6](bRun:=adsArr.inArr[4].6,iPM:=4,iBelt:=1);
	arr_fb_belt[7](bRun:=adsArr.inArr[4].7,iPM:=4,iBelt:=0);
	arr_fb_belt[8](bRun:=adsArr.inArr[4].8,iPM:=5,iBelt:=1);
	arr_fb_belt[9](bRun:=adsArr.inArr[4].9,iPM:=5,iBelt:=0);
	GVL.pm[2].outConv.valve[1].retract	:= adsArr.inArr[5].0;
	GVL.pm[4].outConv.valve[1].retract	:= adsArr.inArr[5].1;
	G_IO.arDO[55].Ch[10] := adsArr.inArr[5].2;
	G_IO.arDO[55].Ch[11] := adsArr.inArr[5].3;
	G_IO.arDO[55].Ch[12] := adsArr.inArr[5].4;
	G_IO.arDO[55].Ch[13] := adsArr.inArr[5].5;
	G_IO.arDO[59].Ch[10] := adsArr.inArr[5].6;
	G_IO.arDO[59].Ch[11] := adsArr.inArr[5].7;
	G_IO.arDO[59].Ch[12] := adsArr.inArr[5].8;
	G_IO.arDO[59].Ch[13] := adsArr.inArr[5].9;
	
	adsArr.outArr[4].0	:= GVL.pm[2].outConv.photo_sensor[1];
	adsArr.outArr[4].1	:= GVL.pm[4].outConv.photo_sensor[1];
	adsArr.outArr[4].2	:= G_IO.arDI[77].Ch[0];
	adsArr.outArr[4].3	:= G_IO.arDI[77].Ch[1];
	adsArr.outArr[4].4	:= G_IO.arDI[77].Ch[4];
	adsArr.outArr[4].5	:= G_IO.arDI[77].Ch[5];
	adsArr.outArr[4].6	:= G_IO.arDI[78].Ch[0];
	adsArr.outArr[4].7	:= G_IO.arDI[78].Ch[1];
	adsArr.outArr[4].8	:= G_IO.arDI[78].Ch[4];
	adsArr.outArr[4].9	:= G_IO.arDI[78].Ch[5];
	
	
	
	
	
	GVL.pm[1].outConv.valve[1].retract	:= TRUE;
	GVL.pm[1].outConv.valve[0].retract	:= TRUE;
	//GVL.pm[2].outConv.valve[1].retract	:= TRUE;
	GVL.pm[2].outConv.valve[0].retract	:= TRUE	;
	GVL.pm[3].outConv.valve[1].retract	:= TRUE;
	GVL.pm[3].outConv.valve[0].retract	:= TRUE;
	//GVL.pm[4].outConv.valve[1].retract	:= TRUE;
	GVL.pm[4].outConv.valve[0].retract	:= TRUE;
	GVL.pm[5].outConv.valve[1].retract	:= TRUE;
	GVL.pm[5].outConv.valve[0].retract	:= TRUE;
	
END_IF
]]></ST>
    </Implementation>
    <Method Name="bag_done_unclamping" Id="{e047a4f5-01c2-4724-98d7-fd4c5489bb8e}">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD PUBLIC bag_done_unclamping : BOOL
VAR_INPUT

END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[bag_done_unclamping	:= FALSE;
current_bag_cmd	:= BagCmd.REMOVE_BAG_HOLDER;
IF bag_removed OR unload_ready THEN //avoid not catch signal of removed
	bag_done_unclamping := TRUE;
	current_bag_cmd	:= BagCmd.DO_NOTHING;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Property Name="bag_removed" Id="{42fdd4c2-b1b0-40fd-b9d0-6bc8b59e8947}">
      <Declaration><![CDATA[PROPERTY bag_removed : BOOL]]></Declaration>
      <Get Name="Get" Id="{d52869db-1d62-4dd3-96ce-888cb2f81a29}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[bag_removed	:= (WORD_TO_INT(adsArr.inArr[1])	= BagStatus.REMOVED);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="fixture_ready" Id="{38c86974-e5a7-4331-a074-f2b44f4137b9}">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD PUBLIC fixture_ready : BOOL
VAR_INPUT

END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fixture_ready	:= FALSE;
current_bag_cmd	:= BagCmd.INSERT_BAG_HOLDER;
IF machine_inserted THEN
	fixture_ready	:= TRUE;
	current_bag_cmd	:= 	BagCmd.DO_NOTHING;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Init" Id="{c7122a50-0b88-4965-9082-2579505fb32a}">
      <Declaration><![CDATA[METHOD M_Init : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[M_Init	:= FALSE;
current_bag_cmd	:= BagCmd.DO_NOTHING;
current_bag_height_status := BagHeightStatus.UNKNOWN;
M_Init	:= TRUE;
]]></ST>
      </Implementation>
    </Method>
    <Property Name="machine_inserted" Id="{8b3bbd2f-7f3d-4679-9bd2-27237076212b}">
      <Declaration><![CDATA[PROPERTY machine_inserted : BOOL]]></Declaration>
      <Get Name="Get" Id="{70820c96-6148-49c5-a139-06a614438dd7}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[machine_inserted	:= (WORD_TO_INT(adsArr.inArr[1])	= BagStatus.INSERTED);
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="unload_ready" Id="{c36c0a27-bfee-4b89-9e12-141da2b9c8c6}">
      <Declaration><![CDATA[PROPERTY unload_ready : BOOL]]></Declaration>
      <Get Name="Get" Id="{b0b68d0c-36a7-4abb-b777-e5a55260dddb}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[unload_ready	:= (WORD_TO_INT(adsArr.inArr[1])	= BagStatus.READY);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <LineIds Name="FB_BagCloser">
      <LineId Id="248" Count="49" />
      <LineId Id="431" Count="0" />
      <LineId Id="298" Count="9" />
      <LineId Id="386" Count="5" />
      <LineId Id="432" Count="0" />
      <LineId Id="317" Count="0" />
      <LineId Id="392" Count="5" />
      <LineId Id="403" Count="3" />
      <LineId Id="357" Count="0" />
      <LineId Id="468" Count="0" />
      <LineId Id="419" Count="11" />
      <LineId Id="433" Count="1" />
      <LineId Id="436" Count="2" />
      <LineId Id="435" Count="0" />
      <LineId Id="329" Count="2" />
      <LineId Id="2" Count="0" />
      <LineId Id="501" Count="0" />
      <LineId Id="500" Count="0" />
      <LineId Id="506" Count="8" />
      <LineId Id="516" Count="1" />
      <LineId Id="520" Count="0" />
      <LineId Id="519" Count="0" />
      <LineId Id="522" Count="0" />
      <LineId Id="525" Count="3" />
      <LineId Id="521" Count="0" />
      <LineId Id="524" Count="0" />
      <LineId Id="523" Count="0" />
      <LineId Id="529" Count="0" />
      <LineId Id="542" Count="0" />
      <LineId Id="546" Count="2" />
      <LineId Id="550" Count="2" />
      <LineId Id="549" Count="0" />
      <LineId Id="543" Count="2" />
      <LineId Id="541" Count="0" />
      <LineId Id="518" Count="0" />
      <LineId Id="532" Count="1" />
      <LineId Id="535" Count="0" />
      <LineId Id="531" Count="0" />
      <LineId Id="534" Count="0" />
      <LineId Id="536" Count="4" />
      <LineId Id="530" Count="0" />
      <LineId Id="515" Count="0" />
      <LineId Id="493" Count="0" />
    </LineIds>
    <LineIds Name="FB_BagCloser.bag_done_unclamping">
      <LineId Id="76" Count="5" />
      <LineId Id="70" Count="0" />
    </LineIds>
    <LineIds Name="FB_BagCloser.bag_removed.Get">
      <LineId Id="6" Count="0" />
    </LineIds>
    <LineIds Name="FB_BagCloser.fixture_ready">
      <LineId Id="89" Count="0" />
      <LineId Id="94" Count="0" />
      <LineId Id="105" Count="2" />
      <LineId Id="99" Count="0" />
    </LineIds>
    <LineIds Name="FB_BagCloser.M_Init">
      <LineId Id="7" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="6" Count="0" />
    </LineIds>
    <LineIds Name="FB_BagCloser.machine_inserted.Get">
      <LineId Id="5" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_BagCloser.unload_ready.Get">
      <LineId Id="6" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>
<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_BagOpener" Id="{fd7c2eea-b5e2-4b0f-9db6-d8c12e875e23}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_BagOpener
VAR_INPUT
  ams_net_id	: STRING;
END_VAR
VAR_OUTPUT
END_VAR
VAR
  	// Variable to be read from the app in python.
	status: BagMachineStatus;
  	bag_detection_status: BagDetectionStatus;
  	bag_holder_status: BagHolderStatus;
    bag_status: BagStatus;
	current_bag_cmd: BagCmd;
	current_bag_detection_cmd: BagDetectionCmd;

	adsread				: ADSREAD;
	adswrite			: ADSWRITE;
	iMethodTest			: BagMachineStatus;
	bagOpenStatus 		: BagMachineStatus;
  	error_code			: UINT;

	adsArr				: AdsArr;
	iState				: INT;
	iAds				: INT;
	ton_ms				: TON;
	iMachineStatus		: INT;//inArr[0]
	iBagStatus			: INT;//inArr[1]
	iBagDetectStatus	: INT;//inArr[2]
	//iBagCmd				: INT;//outArr[1]
	//iBagDetectCmd		: INT;//outArr[2]
	
	
	
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[	adsread(
			NETID:=ams_net_id , 
			PORT:=851 , 
			IDXGRP:=16#00004020 , 
			IDXOFFS:=100 , 
			LEN:= SIZEOF(adsArr.inArr), 
			DESTADDR:= ADR(adsArr.inArr), 
			READ:=, 
			TMOUT:=T#2S , 
			BUSY=> , 
			ERR=> , 
			ERRID=> );
	adswrite(
			NETID:=ams_net_id , 
			PORT:=851, 
			IDXGRP:=16#00004020, 
			IDXOFFS:=200, 
			LEN:=SIZEOF(adsArr.outArr) , 
			SRCADDR:=ADR(adsArr.outArr) , 
			WRITE:= , 
			TMOUT:=T#2S , 
			BUSY=> , 
			ERR=> , 
			ERRID=> );
ton_ms(PT:=T#2MS);			
CASE iAds OF 
	0:
		adsread.READ	:= FALSE;
		adswrite.WRITE	:= FALSE;	
		iAds	:=1;
	1:
		ton_ms.IN	:= TRUE;
		IF ton_ms.Q THEN
			ton_ms.IN	:= FALSE;
			iAds	:=2;
		END_IF
	2:
		adsread.READ	:= TRUE;
		adswrite.WRITE	:= TRUE;
		iAds	:=3;
	3:
		ton_ms.IN	:= TRUE;
		IF ton_ms.Q THEN
			ton_ms.IN	:= FALSE;
			iAds	:=0;
		END_IF	
END_CASE
//inputArr:
//		[0]:machine status;
//		[1]:bag status;
//		[2]:bag detect status(0:idle,1:ok,2:ng);	
//		[3]:fixture status
//outputArr:
//		[0]:line status;
//		[1]:bag cmd(0: do_nothing, 1:insert_bag, 2:bag_done_clamping);
//	    [2]:bag detect cmd(0:idle,1:trigger,2:reset);
iMachineStatus		:= WORD_TO_INT(adsArr.inArr[0]);
iBagStatus 			:= WORD_TO_INT(adsArr.inArr[1]);
iBagDetectStatus	:= WORD_TO_INT(adsArr.inArr[2]);

adsArr.outArr[1]	:= INT_TO_WORD(current_bag_cmd);
adsArr.outArr[2]	:= INT_TO_WORD(current_bag_detection_cmd);

CASE adsArr.inArr[0] OF
	0:status	:= BagMachineStatus.OFF;
	1:status	:= BagMachineStatus.BUSY;
	2:status	:= BagMachineStatus.READY;
	3:status	:= BagMachineStatus.RESET;
	4:status	:= BagMachineStatus.ERROR;
	5:status	:= BagMachineStatus.STOPPED;
END_CASE
CASE adsArr.inArr[1] OF
	0:bag_status	:= BagStatus.UNKNOWN;
	1:bag_status	:= BagStatus.READY;
	2:bag_status	:= BagStatus.INSERTED;
	3:bag_status	:= BagStatus.REMOVED;
END_CASE
CASE adsArr.inArr[2] OF
	0:bag_detection_status	:= BagDetectionStatus.UNKNOWN;
	1:bag_detection_status	:= BagDetectionStatus.OKAY;
	2:bag_detection_status	:= BagDetectionStatus.NG;
	3:bag_detection_status	:= BagDetectionStatus.ERROR;
END_CASE
CASE adsArr.inArr[3] OF
	0:bag_holder_status	:= BagHolderStatus.UNKNOWN;
	1:bag_holder_status	:= BagHolderStatus.DOWN;
	2:bag_holder_status	:= BagHolderStatus.UP;
END_CASE

CASE current_bag_detection_cmd OF
	BagDetectionCmd.DO_NOTHING:
		;
	BagDetectionCmd.GET_RESULT_FROM_CAMERA:
		IF get_result_from_camera() THEN
			current_bag_detection_cmd	:=0;
		END_IF		
	BagDetectionCmd.RESET_CAMERA:
		IF reset_camera() THEN
			current_bag_detection_cmd	:=0;
		END_IF	
END_CASE

CASE current_bag_cmd OF
	BagCmd.DO_NOTHING:
		;
	BagCmd.INSERT_BAG_HOLDER:
		IF fixture_ready() THEN
			current_bag_cmd	:=0;
		END_IF		
	BagCmd.REMOVE_BAG_HOLDER:
		IF bag_done_clamping() THEN
			current_bag_cmd	:=0;
		END_IF	
	BagCmd.STOP:
		current_bag_cmd	:= BagCmd.STOP;
		IF status = BagMachineStatus.STOPPED THEN
			current_bag_cmd	:= BagCmd.DO_NOTHING;
		END_IF
END_CASE


]]></ST>
    </Implementation>
    <Method Name="bag_done_clamping" Id="{106afa9e-1515-436b-93db-b6ae6b065e5a}">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD PUBLIC bag_done_clamping : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[bag_done_clamping	:= FALSE;
current_bag_cmd	:= BagCmd.REMOVE_BAG_HOLDER;
IF bag_removed OR bag_ready THEN//avoid not catch signal of removed
	bag_done_clamping := TRUE;
	current_bag_cmd	:= BagCmd.DO_NOTHING;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Property Name="bag_inserted" Id="{5d05c0dc-651b-47e9-9738-a91b3f9d748c}">
      <Declaration><![CDATA[PROPERTY bag_inserted : BOOL]]></Declaration>
      <Get Name="Get" Id="{555689cb-662e-416b-955b-dd411e528cee}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[bag_inserted	:= (WORD_TO_INT(adsArr.inArr[1]) = BagStatus.INSERTED);
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="bag_ready" Id="{997ca967-3d37-4a66-b58f-b695ba6a31b6}">
      <Declaration><![CDATA[PROPERTY bag_ready : BOOL]]></Declaration>
      <Get Name="Get" Id="{b4c37c5a-b78e-4308-ae60-eb17b4b6f6ab}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[bag_ready	:= (WORD_TO_INT(adsArr.inArr[1])	= BagStatus.READY);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="bag_removed" Id="{ac688585-3c93-428b-aa37-7290a5716161}">
      <Declaration><![CDATA[PROPERTY bag_removed : BOOL]]></Declaration>
      <Get Name="Get" Id="{398bd56f-f747-4f00-8c7a-3a6dc6d977b0}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[bag_removed	:= (WORD_TO_INT(adsArr.inArr[1])	= BagStatus.REMOVED);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="fixture_ready" Id="{0e345c77-d842-4b75-8009-4e038aec809a}">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD PUBLIC fixture_ready : BOOL
VAR_INPUT

END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fixture_ready	:= FALSE;
current_bag_cmd	:= BagCmd.INSERT_BAG_HOLDER;
IF bag_inserted THEN
	fixture_ready	:= TRUE;
	current_bag_cmd	:= 	BagCmd.DO_NOTHING;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="get_result_from_camera" Id="{e17a1061-a312-4c90-ae11-f2c84b35ac55}">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD PUBLIC get_result_from_camera : BOOL
VAR_INPUT

END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[get_result_from_camera	:= FALSE;

current_bag_detection_cmd := BagDetectionCmd.GET_RESULT_FROM_CAMERA;
IF iBagDetectStatus <> BagDetectionStatus.UNKNOWN THEN
	get_result_from_camera := TRUE;
	current_bag_detection_cmd := BagDetectionCmd.DO_NOTHING;
END_IF	]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Init" Id="{ab5f3fbb-59b8-4828-aeda-825e8bbd1b52}">
      <Declaration><![CDATA[METHOD M_Init : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[M_Init	:= FALSE;
iState	:= BagMachineStatus.OFF;
current_bag_detection_cmd := BagDetectionCmd.DO_NOTHING;
current_bag_cmd	:= BagCmd.DO_NOTHING;
M_Init	:= TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="reset_camera" Id="{ceb98418-f13a-4ed3-bbb0-590c0cc0059d}">
      <Declaration><![CDATA[{attribute 'TcRpcEnable'}
METHOD PUBLIC reset_camera : BOOL
VAR_INPUT

END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[reset_camera := FALSE;
current_bag_detection_cmd := BagDetectionCmd.RESET_CAMERA;
IF iBagDetectStatus = BagDetectionStatus.UNKNOWN THEN
	reset_camera := TRUE;
	current_bag_detection_cmd := BagDetectionCmd.DO_NOTHING;
END_IF	
]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_BagOpener">
      <LineId Id="17" Count="22" />
      <LineId Id="2" Count="0" />
      <LineId Id="73" Count="0" />
      <LineId Id="46" Count="1" />
      <LineId Id="126" Count="1" />
      <LineId Id="52" Count="7" />
      <LineId Id="129" Count="0" />
      <LineId Id="128" Count="0" />
      <LineId Id="64" Count="1" />
      <LineId Id="75" Count="3" />
      <LineId Id="70" Count="0" />
      <LineId Id="45" Count="0" />
      <LineId Id="156" Count="0" />
      <LineId Id="158" Count="1" />
      <LineId Id="181" Count="0" />
      <LineId Id="218" Count="0" />
      <LineId Id="163" Count="0" />
      <LineId Id="157" Count="0" />
      <LineId Id="161" Count="1" />
      <LineId Id="164" Count="0" />
      <LineId Id="85" Count="0" />
      <LineId Id="180" Count="0" />
      <LineId Id="331" Count="0" />
      <LineId Id="95" Count="0" />
      <LineId Id="153" Count="0" />
      <LineId Id="167" Count="0" />
      <LineId Id="96" Count="0" />
      <LineId Id="168" Count="0" />
      <LineId Id="170" Count="2" />
      <LineId Id="329" Count="0" />
      <LineId Id="349" Count="0" />
      <LineId Id="169" Count="0" />
      <LineId Id="332" Count="4" />
      <LineId Id="284" Count="0" />
      <LineId Id="338" Count="4" />
      <LineId Id="246" Count="0" />
      <LineId Id="344" Count="3" />
      <LineId Id="343" Count="0" />
      <LineId Id="245" Count="0" />
      <LineId Id="94" Count="0" />
      <LineId Id="131" Count="0" />
      <LineId Id="135" Count="0" />
      <LineId Id="144" Count="2" />
      <LineId Id="137" Count="0" />
      <LineId Id="147" Count="2" />
      <LineId Id="138" Count="0" />
      <LineId Id="132" Count="0" />
      <LineId Id="183" Count="0" />
      <LineId Id="318" Count="10" />
      <LineId Id="351" Count="3" />
      <LineId Id="350" Count="0" />
      <LineId Id="248" Count="0" />
      <LineId Id="247" Count="0" />
      <LineId Id="86" Count="0" />
      <LineId Id="84" Count="0" />
    </LineIds>
    <LineIds Name="FB_BagOpener.bag_done_clamping">
      <LineId Id="33" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_BagOpener.bag_inserted.Get">
      <LineId Id="5" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_BagOpener.bag_ready.Get">
      <LineId Id="6" Count="0" />
    </LineIds>
    <LineIds Name="FB_BagOpener.bag_removed.Get">
      <LineId Id="6" Count="0" />
    </LineIds>
    <LineIds Name="FB_BagOpener.fixture_ready">
      <LineId Id="96" Count="4" />
      <LineId Id="54" Count="0" />
    </LineIds>
    <LineIds Name="FB_BagOpener.get_result_from_camera">
      <LineId Id="102" Count="5" />
      <LineId Id="54" Count="0" />
    </LineIds>
    <LineIds Name="FB_BagOpener.M_Init">
      <LineId Id="7" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="8" Count="2" />
    </LineIds>
    <LineIds Name="FB_BagOpener.reset_camera">
      <LineId Id="115" Count="5" />
      <LineId Id="104" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>
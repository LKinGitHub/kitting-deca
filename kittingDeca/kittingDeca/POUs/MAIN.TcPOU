<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="MAIN" Id="{79b373eb-1c8e-4458-8b04-107fcef16361}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	test_bool:BOOL;
	test_int:INT;
	test_real:REAL;
	test_string:STRING;
	test_arr_int:ARRAY[1..10] OF INT;
	test_word:WORD;
	test_arr_bool:ARRAY[1..3] OF BOOL;
	test_structure:user_defined_structure;
	test_arr_string:ARRAY[1..3] OF STRING;
	
	fb_Time : FB_LocalSystemTime;

	byte1 : BYTE;
	string1 :STRING;

	iInit	: int;
	i	: INT;
	j	: INT;
	
	ton_1ms	: TON;
	iAds: INT;
	
	xErr_converterMotors	: BOOL;
	xErr_servoMoters	: BOOL;
	xError	: BOOL;

	xReset	: BOOL;
	
	

	iReset: INT;
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[fb_Time(bEnable := TRUE); 

M_mappingIO();
M_measuringLC();
M_rfid();
runEveryCycle();
M_ReM();
//M_ads_bagmachines();
safetyConfig();
agingTestConfig();



CASE iInit OF
	0:
		FOR i:=0 TO 57 DO
			GVL.ref_fbconverterMotor[i]^.bSetParaEx	:= FALSE;
		END_FOR
		FOR i:=0 TO 99 DO
			GVL.arrValve_PM[i].bStart	:= FALSE;
			GVL.arrValve_PM[i].bStop	:= FALSE;
		END_FOR			
	1://set parameters for all converter motors
		FOR i:=0 TO 57 DO
			GVL.ref_fbconverterMotor[i]^.bSetParaEx	:= TRUE;
		END_FOR
		IF GVL.ref_fbconverterMotor[57]^.xDone THEN
			iInit	:=2;
		END_IF
	2://set parameters for all converter motors
		FOR i:=0 TO 57 DO
			GVL.ref_fbconverterMotor[i]^.bSetParaEx	:= FALSE;
		END_FOR
		iInit	:=0;
	3://run all converter motors
		FOR i:=0 TO 57 DO
			GVL.ref_fbconverterMotor[i]^.cmd	:=INT_TO_UINT(E_CMD_ConverterMotor.BACKWARE);
			GVL.ref_fbconverterMotor[i]^.freq	:= 2000;
		END_FOR
	4://stop all converter moters
		FOR i:=0 TO 57 DO
			GVL.ref_fbconverterMotor[i]^.cmd	:= 0;
			GVL.ref_fbconverterMotor[i]^.freq	:= 0;
		END_FOR
		iInit	:=0;
	5://all lift axis servo on
		FOR i:=0 TO 19 DO
			GVL.stAxisCtrl_Lift[i].iCmd	:= 1;
			GVL.stAxisCtrl_Buffer[i].iCmd	:= 1;
		END_FOR
		FOR i:=0 TO 1 DO
			GVL.stAxisCtrl_LC[i].iCmd	:= 1;
			GVL.stAxisCtrl_FR[i].iCmd	:= 1;
		END_FOR
		iInit	:=0;
	6://all lift axis run
		FOR i:=0 TO 19 DO
			GVL.stAxisCtrl_Lift[i].rPosition	:= 0;
			GVL.stAxisCtrl_Lift[i].iSpeed	:= 200;
			GVL.stAxisCtrl_Lift[i].iCmd	:= 10;
		END_FOR
		iInit	:=0;
	7://all buffer axis run
		FOR i:=0 TO 19 DO
			GVL.stAxisCtrl_Buffer[i].rPosition	:= 250;
			GVL.stAxisCtrl_Buffer[i].iSpeed	:= 100;
			GVL.stAxisCtrl_Buffer[i].iCmd	:= 20;
		END_FOR	
		iInit	:=0;
	8://all lift axis stop
		FOR i:=0 TO 19 DO
			GVL.stAxisCtrl_Lift[i].iCmd	:= 100;
			GVL.stAxisCtrl_Buffer[i].iCmd	:= 100;
		END_FOR	
		FOR i:=0 TO 1 DO
			GVL.stAxisCtrl_LC[i].iCmd	:= 100;
			GVL.stAxisCtrl_FR[i].iCmd	:= 100;
		END_FOR		
		FOR i:=0 TO 57 DO
			GVL.ref_fbconverterMotor[i]^.cmd	:= 0;
			GVL.ref_fbconverterMotor[i]^.freq	:= 0;
		END_FOR
		FOR i:=0 TO 99 DO
			GVL.arrValve_PM[i].bStop	:= TRUE;
		END_FOR	
		FOR i:=0 TO 119 DO
			GVL.arrValve_Rem[i].bStop	:= TRUE;
		END_FOR			
		iInit	:=0;		
	9://check error
		IF M_checkError() THEN
			iInit	:=0;
		END_IF
	
	10://reset error
		IF M_reset() THEN
			iInit	:=0;
		END_IF		
	11://
		FOR i:=0 TO 1 DO
			GVL.stAxisCtrl_LC[i].rPosition	:= -800;
			GVL.stAxisCtrl_LC[i].iSpeed	:= 600;
			GVL.stAxisCtrl_LC[i].iCmd	:= 10;
		END_FOR
		iInit	:=0;	
	12://
		FOR i:=0 TO 1 DO
			GVL.stAxisCtrl_FR[i].rPosition	:= -170;
			GVL.stAxisCtrl_FR[i].iSpeed	:= 200;
			GVL.stAxisCtrl_FR[i].iCmd	:= 10;
		END_FOR
		iInit	:=0;	
	13://aging test valve of pm
		FOR i:=0 TO 99 DO
			GVL.arrValve_PM[i].bStart	:= TRUE;
		END_FOR
		iInit	:=0;
	14://aging test valve of rem
		FOR i:=0 TO 119 DO
			GVL.arrValve_Rem[i].bStart	:= TRUE;
		END_FOR		
		iInit	:=0;	

END_CASE

GVL.fb_bagOpener(ams_net_id:=GVL.netId_bagmachie[0]);
GVL.fb_bagCloser(ams_net_id:=GVL.netId_bagmachie[1]);
GVL.fb_bagCompactor(ams_net_id:=GVL.netId_bagmachie[2]);
IF test_bool THEN
	ADSLOGSTR(msgCtrlMask:= ADSLOG_MSGTYPE_LOG,msgFmtStr:='msg:log',strArg:='MSG ARG');
	test_bool	:= FALSE;
END_IF
GVL.stHeightDetection.sNetID:='192.168.11.159.9.1';
GVL.stHeightDetection.nSlaveAddr:=1001;
GVL.fb_heightDetection(stHeightDetection:=GVL.stHeightDetection);]]></ST>
    </Implementation>
    <Action Name="agingTestConfig" Id="{1d1d1c97-22e3-4544-80ac-de316d41d784}">
      <Implementation>
        <ST><![CDATA[GVL.stConverter[0].sNetID	:= '192.168.11.159.5.1';
GVL.stConverter[0].nSlaveAddr	:= 1003;//lb[0]
GVL.stConverter[1].sNetID	:= '192.168.11.159.5.1';
GVL.stConverter[1].nSlaveAddr	:= 1005;//lc[0]
GVL.stConverter[2].sNetID	:= '192.168.11.159.5.1';
GVL.stConverter[2].nSlaveAddr	:= 1008;//pm[0]_inner
GVL.stConverter[3].sNetID	:= '192.168.11.159.5.1';
GVL.stConverter[3].nSlaveAddr	:= 1009;//pm[0]_outer
GVL.stConverter[4].sNetID	:= '192.168.11.159.5.1';
GVL.stConverter[4].nSlaveAddr	:= 1018;//pm[1]_inner
GVL.stConverter[5].sNetID	:= '192.168.11.159.5.1';
GVL.stConverter[5].nSlaveAddr	:= 1019;//pm[1]_outer
GVL.stConverter[6].sNetID	:= '192.168.11.159.5.1';
GVL.stConverter[6].nSlaveAddr	:= 1026;//pm[2]_inner
GVL.stConverter[7].sNetID	:= '192.168.11.159.5.1';
GVL.stConverter[7].nSlaveAddr	:= 1027;//pm[2]_outer
GVL.stConverter[8].sNetID	:= '192.168.11.159.5.1';
GVL.stConverter[8].nSlaveAddr	:= 1034;//pm[3]_inner
GVL.stConverter[9].sNetID	:= '192.168.11.159.5.1';
GVL.stConverter[9].nSlaveAddr	:= 1035;//pm[3]_outer
GVL.stConverter[10].sNetID	:= '192.168.11.159.5.1';
GVL.stConverter[10].nSlaveAddr	:= 1044;//pm[4]_inner
GVL.stConverter[11].sNetID	:= '192.168.11.159.5.1';
GVL.stConverter[11].nSlaveAddr	:= 1045;//pm[4]_outer
GVL.stConverter[12].sNetID	:= '192.168.11.159.5.1';
GVL.stConverter[12].nSlaveAddr	:= 1052;//lb[1]
GVL.stConverter[13].sNetID	:= '192.168.11.159.5.1';
GVL.stConverter[13].nSlaveAddr	:= 1054;//lc[1]
GVL.lb[0].belt[0].fbconverter(stConverter:=GVL.stConverter[0],iMotor:=0);
GVL.lb[0].belt[1].fbconverter(stConverter:=GVL.stConverter[0],iMotor:=1);
GVL.lb[0].belt[2].fbconverter(stConverter:=GVL.stConverter[0],iMotor:=2);
GVL.lc[0].belt_out.belt.fbconverter(stConverter:=GVL.stConverter[1],iMotor:=0);
GVL.pm[0].inConv.belt[0].fbconverter(stConverter:= GVL.stConverter[2],iMotor:=0);
GVL.pm[0].inConv.belt[1].fbconverter(stConverter:= GVL.stConverter[2],iMotor:=1);
GVL.pm[0].inConv.belt[2].fbconverter(stConverter:= GVL.stConverter[2],iMotor:=2);
GVL.pm[1].inConv.belt[0].fbconverter(stConverter:= GVL.stConverter[2],iMotor:=3);
GVL.pm[1].inConv.belt[1].fbconverter(stConverter:= GVL.stConverter[2],iMotor:=4);
GVL.pm[1].inConv.belt[2].fbconverter(stConverter:= GVL.stConverter[2],iMotor:=5);
GVL.pm[0].outConv.belt[0].fbconverter(stConverter:= GVL.stConverter[3],iMotor:=0);
GVL.pm[0].outConv.belt[1].fbconverter(stConverter:= GVL.stConverter[3],iMotor:=1);
GVL.pm[1].outConv.belt[0].fbconverter(stConverter:= GVL.stConverter[3],iMotor:=2);
GVL.pm[1].outConv.belt[1].fbconverter(stConverter:= GVL.stConverter[3],iMotor:=3);
GVL.pm[2].inConv.belt[0].fbconverter(stConverter:= GVL.stConverter[4],iMotor:=0);
GVL.pm[2].inConv.belt[1].fbconverter(stConverter:= GVL.stConverter[4],iMotor:=1);
GVL.pm[2].inConv.belt[2].fbconverter(stConverter:= GVL.stConverter[4],iMotor:=2);
GVL.pm[3].inConv.belt[0].fbconverter(stConverter:= GVL.stConverter[4],iMotor:=3);
GVL.pm[3].inConv.belt[1].fbconverter(stConverter:= GVL.stConverter[4],iMotor:=4);
GVL.pm[3].inConv.belt[2].fbconverter(stConverter:= GVL.stConverter[4],iMotor:=5);
GVL.pm[2].outConv.belt[0].fbconverter(stConverter:= GVL.stConverter[5],iMotor:=0);
GVL.pm[2].outConv.belt[1].fbconverter(stConverter:= GVL.stConverter[5],iMotor:=1);
GVL.pm[3].outConv.belt[0].fbconverter(stConverter:= GVL.stConverter[5],iMotor:=2);
GVL.pm[3].outConv.belt[1].fbconverter(stConverter:= GVL.stConverter[5],iMotor:=3);
GVL.pm[4].inConv.belt[0].fbconverter(stConverter:= GVL.stConverter[6],iMotor:=0);
GVL.pm[4].inConv.belt[1].fbconverter(stConverter:= GVL.stConverter[6],iMotor:=1);
GVL.pm[4].inConv.belt[2].fbconverter(stConverter:= GVL.stConverter[6],iMotor:=2);
GVL.pm[5].inConv.belt[0].fbconverter(stConverter:= GVL.stConverter[6],iMotor:=3);
GVL.pm[5].inConv.belt[1].fbconverter(stConverter:= GVL.stConverter[6],iMotor:=4);
GVL.pm[5].inConv.belt[2].fbconverter(stConverter:= GVL.stConverter[6],iMotor:=5);
GVL.pm[4].outConv.belt[0].fbconverter(stConverter:= GVL.stConverter[7],iMotor:=0);
GVL.pm[4].outConv.belt[1].fbconverter(stConverter:= GVL.stConverter[7],iMotor:=1);
GVL.pm[5].outConv.belt[0].fbconverter(stConverter:= GVL.stConverter[7],iMotor:=2);
GVL.pm[5].outConv.belt[1].fbconverter(stConverter:= GVL.stConverter[7],iMotor:=3);
GVL.pm[6].inConv.belt[0].fbconverter(stConverter:= GVL.stConverter[8],iMotor:=0);
GVL.pm[6].inConv.belt[1].fbconverter(stConverter:= GVL.stConverter[8],iMotor:=1);
GVL.pm[6].inConv.belt[2].fbconverter(stConverter:= GVL.stConverter[8],iMotor:=2);
GVL.pm[7].inConv.belt[0].fbconverter(stConverter:= GVL.stConverter[8],iMotor:=3);
GVL.pm[7].inConv.belt[1].fbconverter(stConverter:= GVL.stConverter[8],iMotor:=4);
GVL.pm[7].inConv.belt[2].fbconverter(stConverter:= GVL.stConverter[8],iMotor:=5);
GVL.pm[6].outConv.belt[0].fbconverter(stConverter:= GVL.stConverter[9],iMotor:=0);
GVL.pm[6].outConv.belt[1].fbconverter(stConverter:= GVL.stConverter[9],iMotor:=1);
GVL.pm[7].outConv.belt[0].fbconverter(stConverter:= GVL.stConverter[9],iMotor:=2);
GVL.pm[7].outConv.belt[1].fbconverter(stConverter:= GVL.stConverter[9],iMotor:=3);
GVL.pm[8].inConv.belt[0].fbconverter(stConverter:= GVL.stConverter[10],iMotor:=0);
GVL.pm[8].inConv.belt[1].fbconverter(stConverter:= GVL.stConverter[10],iMotor:=1);
GVL.pm[8].inConv.belt[2].fbconverter(stConverter:= GVL.stConverter[10],iMotor:=2);
GVL.pm[9].inConv.belt[0].fbconverter(stConverter:= GVL.stConverter[10],iMotor:=3);
GVL.pm[9].inConv.belt[1].fbconverter(stConverter:= GVL.stConverter[10],iMotor:=4);
GVL.pm[9].inConv.belt[2].fbconverter(stConverter:= GVL.stConverter[10],iMotor:=5);
GVL.pm[8].outConv.belt[0].fbconverter(stConverter:= GVL.stConverter[11],iMotor:=0);
GVL.pm[8].outConv.belt[1].fbconverter(stConverter:= GVL.stConverter[11],iMotor:=1);
GVL.pm[9].outConv.belt[0].fbconverter(stConverter:= GVL.stConverter[11],iMotor:=2);
GVL.pm[9].outConv.belt[1].fbconverter(stConverter:= GVL.stConverter[11],iMotor:=3);
GVL.lb[1].belt[0].fbconverter(stConverter:=GVL.stConverter[12],iMotor:=0);
GVL.lb[1].belt[1].fbconverter(stConverter:=GVL.stConverter[12],iMotor:=1);
GVL.lb[1].belt[2].fbconverter(stConverter:=GVL.stConverter[12],iMotor:=2);
GVL.lc[1].belt_out.belt.fbconverter(stConverter:=GVL.stConverter[13],iMotor:=0);



GVL.ref_fbconverterMotor[0]		:= ADR(GVL.lb[0].belt[0].fbconverter);
GVL.ref_fbconverterMotor[1]		:= ADR(GVL.lb[0].belt[1].fbconverter);
GVL.ref_fbconverterMotor[2]		:= ADR(GVL.lb[0].belt[2].fbconverter);
GVL.ref_fbconverterMotor[3]		:= ADR(GVL.lc[0].belt_out.belt.fbconverter);
GVL.ref_fbconverterMotor[4]		:= ADR(GVL.pm[0].inConv.belt[0].fbconverter);
GVL.ref_fbconverterMotor[5]		:= ADR(GVL.pm[0].inConv.belt[1].fbconverter);
GVL.ref_fbconverterMotor[6]		:= ADR(GVL.pm[0].inConv.belt[2].fbconverter);
GVL.ref_fbconverterMotor[7]		:= ADR(GVL.pm[1].inConv.belt[0].fbconverter);
GVL.ref_fbconverterMotor[8]		:= ADR(GVL.pm[1].inConv.belt[1].fbconverter);
GVL.ref_fbconverterMotor[9]		:= ADR(GVL.pm[1].inConv.belt[2].fbconverter);
GVL.ref_fbconverterMotor[10]	:= ADR(GVL.pm[0].outConv.belt[0].fbconverter);
GVL.ref_fbconverterMotor[11]	:= ADR(GVL.pm[0].outConv.belt[1].fbconverter);
GVL.ref_fbconverterMotor[12]	:= ADR(GVL.pm[1].outConv.belt[0].fbconverter);
GVL.ref_fbconverterMotor[13]	:= ADR(GVL.pm[1].outConv.belt[1].fbconverter);
GVL.ref_fbconverterMotor[14]	:= ADR(GVL.pm[2].inConv.belt[0].fbconverter);
GVL.ref_fbconverterMotor[15]	:= ADR(GVL.pm[2].inConv.belt[1].fbconverter);
GVL.ref_fbconverterMotor[16]	:= ADR(GVL.pm[2].inConv.belt[2].fbconverter);
GVL.ref_fbconverterMotor[17]	:= ADR(GVL.pm[3].inConv.belt[0].fbconverter);
GVL.ref_fbconverterMotor[18]	:= ADR(GVL.pm[3].inConv.belt[1].fbconverter);
GVL.ref_fbconverterMotor[19]	:= ADR(GVL.pm[3].inConv.belt[2].fbconverter);
GVL.ref_fbconverterMotor[20]	:= ADR(GVL.pm[2].outConv.belt[0].fbconverter);
GVL.ref_fbconverterMotor[21]	:= ADR(GVL.pm[2].outConv.belt[1].fbconverter);
GVL.ref_fbconverterMotor[22]	:= ADR(GVL.pm[3].outConv.belt[0].fbconverter);
GVL.ref_fbconverterMotor[23]	:= ADR(GVL.pm[3].outConv.belt[1].fbconverter);
GVL.ref_fbconverterMotor[24]	:= ADR(GVL.pm[4].inConv.belt[0].fbconverter);
GVL.ref_fbconverterMotor[25]	:= ADR(GVL.pm[4].inConv.belt[1].fbconverter);
GVL.ref_fbconverterMotor[26]	:= ADR(GVL.pm[4].inConv.belt[2].fbconverter);
GVL.ref_fbconverterMotor[27]	:= ADR(GVL.pm[5].inConv.belt[0].fbconverter);
GVL.ref_fbconverterMotor[28]	:= ADR(GVL.pm[5].inConv.belt[1].fbconverter);
GVL.ref_fbconverterMotor[29]	:= ADR(GVL.pm[5].inConv.belt[2].fbconverter);
GVL.ref_fbconverterMotor[30]	:= ADR(GVL.pm[4].outConv.belt[0].fbconverter);
GVL.ref_fbconverterMotor[31]	:= ADR(GVL.pm[4].outConv.belt[1].fbconverter);
GVL.ref_fbconverterMotor[32]	:= ADR(GVL.pm[5].outConv.belt[0].fbconverter);
GVL.ref_fbconverterMotor[33]	:= ADR(GVL.pm[5].outConv.belt[1].fbconverter);
GVL.ref_fbconverterMotor[34]	:= ADR(GVL.pm[6].inConv.belt[0].fbconverter);
GVL.ref_fbconverterMotor[35]	:= ADR(GVL.pm[6].inConv.belt[1].fbconverter);
GVL.ref_fbconverterMotor[36]	:= ADR(GVL.pm[6].inConv.belt[2].fbconverter);
GVL.ref_fbconverterMotor[37]	:= ADR(GVL.pm[7].inConv.belt[0].fbconverter);
GVL.ref_fbconverterMotor[38]	:= ADR(GVL.pm[7].inConv.belt[1].fbconverter);
GVL.ref_fbconverterMotor[39]	:= ADR(GVL.pm[7].inConv.belt[2].fbconverter);
GVL.ref_fbconverterMotor[40]	:= ADR(GVL.pm[6].outConv.belt[0].fbconverter);
GVL.ref_fbconverterMotor[41]	:= ADR(GVL.pm[6].outConv.belt[1].fbconverter);
GVL.ref_fbconverterMotor[42]	:= ADR(GVL.pm[7].outConv.belt[0].fbconverter);
GVL.ref_fbconverterMotor[43]	:= ADR(GVL.pm[7].outConv.belt[1].fbconverter);
GVL.ref_fbconverterMotor[44]	:= ADR(GVL.pm[8].inConv.belt[0].fbconverter);
GVL.ref_fbconverterMotor[45]	:= ADR(GVL.pm[8].inConv.belt[1].fbconverter);
GVL.ref_fbconverterMotor[46]	:= ADR(GVL.pm[8].inConv.belt[2].fbconverter);
GVL.ref_fbconverterMotor[47]	:= ADR(GVL.pm[9].inConv.belt[0].fbconverter);
GVL.ref_fbconverterMotor[48]	:= ADR(GVL.pm[9].inConv.belt[1].fbconverter);
GVL.ref_fbconverterMotor[49]	:= ADR(GVL.pm[9].inConv.belt[2].fbconverter);
GVL.ref_fbconverterMotor[50]	:= ADR(GVL.pm[8].outConv.belt[0].fbconverter);
GVL.ref_fbconverterMotor[51]	:= ADR(GVL.pm[8].outConv.belt[1].fbconverter);
GVL.ref_fbconverterMotor[52]	:= ADR(GVL.pm[9].outConv.belt[0].fbconverter);
GVL.ref_fbconverterMotor[53]	:= ADR(GVL.pm[9].outConv.belt[1].fbconverter);
GVL.ref_fbconverterMotor[54]	:= ADR(GVL.lb[1].belt[0].fbconverter);
GVL.ref_fbconverterMotor[55]	:= ADR(GVL.lb[1].belt[1].fbconverter);
GVL.ref_fbconverterMotor[56]	:= ADR(GVL.lb[1].belt[2].fbconverter);
GVL.ref_fbconverterMotor[57]	:= ADR(GVL.lc[1].belt_out.belt.fbconverter);


GVL.arrValve_PM[0](in_out:= GVL.pm[0].inConv.valve[0]);
GVL.arrValve_PM[1](in_out:= GVL.pm[0].inConv.valve[1]);
GVL.arrValve_PM[2](in_out:= GVL.pm[0].inConv.valve[2]);
GVL.arrValve_PM[3](in_out:= GVL.pm[1].inConv.valve[0]);
GVL.arrValve_PM[4](in_out:= GVL.pm[1].inConv.valve[1]);
GVL.arrValve_PM[5](in_out:= GVL.pm[1].inConv.valve[2]);
GVL.arrValve_PM[6](in_out:= GVL.pm[2].inConv.valve[0]);
GVL.arrValve_PM[7](in_out:= GVL.pm[2].inConv.valve[1]);
GVL.arrValve_PM[8](in_out:= GVL.pm[2].inConv.valve[2]);
GVL.arrValve_PM[9](in_out:= GVL.pm[3].inConv.valve[0]);
GVL.arrValve_PM[10](in_out:= GVL.pm[3].inConv.valve[1]);
GVL.arrValve_PM[11](in_out:= GVL.pm[3].inConv.valve[2]);
GVL.arrValve_PM[12](in_out:= GVL.pm[4].inConv.valve[0]);
GVL.arrValve_PM[13](in_out:= GVL.pm[4].inConv.valve[1]);
GVL.arrValve_PM[14](in_out:= GVL.pm[4].inConv.valve[2]);
GVL.arrValve_PM[15](in_out:= GVL.pm[5].inConv.valve[0]);
GVL.arrValve_PM[16](in_out:= GVL.pm[5].inConv.valve[1]);
GVL.arrValve_PM[17](in_out:= GVL.pm[5].inConv.valve[2]);
GVL.arrValve_PM[18](in_out:= GVL.pm[6].inConv.valve[0]);
GVL.arrValve_PM[19](in_out:= GVL.pm[6].inConv.valve[1]);
GVL.arrValve_PM[20](in_out:= GVL.pm[6].inConv.valve[2]);
GVL.arrValve_PM[21](in_out:= GVL.pm[7].inConv.valve[0]);
GVL.arrValve_PM[22](in_out:= GVL.pm[7].inConv.valve[1]);
GVL.arrValve_PM[23](in_out:= GVL.pm[7].inConv.valve[2]);
GVL.arrValve_PM[24](in_out:= GVL.pm[8].inConv.valve[0]);
GVL.arrValve_PM[25](in_out:= GVL.pm[8].inConv.valve[1]);
GVL.arrValve_PM[26](in_out:= GVL.pm[8].inConv.valve[2]);
GVL.arrValve_PM[27](in_out:= GVL.pm[9].inConv.valve[0]);
GVL.arrValve_PM[28](in_out:= GVL.pm[9].inConv.valve[1]);
GVL.arrValve_PM[29](in_out:= GVL.pm[9].inConv.valve[2]);
GVL.arrValve_PM[30](in_out:= GVL.pm[0].outConv.valve[0]);
GVL.arrValve_PM[31](in_out:= GVL.pm[0].outConv.valve[1]);
GVL.arrValve_PM[32](in_out:= GVL.pm[1].outConv.valve[0]);
GVL.arrValve_PM[33](in_out:= GVL.pm[1].outConv.valve[1]);
GVL.arrValve_PM[34](in_out:= GVL.pm[2].outConv.valve[0]);
GVL.arrValve_PM[35](in_out:= GVL.pm[2].outConv.valve[1]);
GVL.arrValve_PM[36](in_out:= GVL.pm[3].outConv.valve[0]);
GVL.arrValve_PM[37](in_out:= GVL.pm[3].outConv.valve[1]);
GVL.arrValve_PM[38](in_out:= GVL.pm[4].outConv.valve[0]);
GVL.arrValve_PM[39](in_out:= GVL.pm[4].outConv.valve[1]);
GVL.arrValve_PM[40](in_out:= GVL.pm[5].outConv.valve[0]);
GVL.arrValve_PM[41](in_out:= GVL.pm[5].outConv.valve[1]);
GVL.arrValve_PM[42](in_out:= GVL.pm[6].outConv.valve[0]);
GVL.arrValve_PM[43](in_out:= GVL.pm[6].outConv.valve[1]);
GVL.arrValve_PM[44](in_out:= GVL.pm[7].outConv.valve[0]);
GVL.arrValve_PM[45](in_out:= GVL.pm[7].outConv.valve[1]);
GVL.arrValve_PM[46](in_out:= GVL.pm[8].outConv.valve[0]);
GVL.arrValve_PM[47](in_out:= GVL.pm[8].outConv.valve[1]);
GVL.arrValve_PM[48](in_out:= GVL.pm[9].outConv.valve[0]);
GVL.arrValve_PM[49](in_out:= GVL.pm[9].outConv.valve[1]);//end of pm
GVL.arrValve_PM[50](in_out:= GVL.lb[0].valve_stopper[0]);
GVL.arrValve_PM[51](in_out:= GVL.lb[0].valve_stopper[1]);
GVL.arrValve_PM[52](in_out:= GVL.lb[0].valve_stopper[2]);
GVL.arrValve_PM[53](in_out:= GVL.lb[0].valve_stopper[3]);
GVL.arrValve_PM[54](in_out:= GVL.lb[0].valve_stopper[4]);
GVL.arrValve_PM[55](in_out:= GVL.lb[0].valve_stopper[5]);
GVL.arrValve_PM[56](in_out:= GVL.lb[1].valve_stopper[0]);
GVL.arrValve_PM[57](in_out:= GVL.lb[1].valve_stopper[1]);
GVL.arrValve_PM[58](in_out:= GVL.lb[1].valve_stopper[2]);
GVL.arrValve_PM[59](in_out:= GVL.lb[1].valve_stopper[3]);
GVL.arrValve_PM[60](in_out:= GVL.lb[1].valve_stopper[4]);
GVL.arrValve_PM[61](in_out:= GVL.lb[1].valve_stopper[5]);//end of lb
GVL.arrValve_PM[62](in_out:= GVL.lc[0].valve_guide[0]);
GVL.arrValve_PM[63](in_out:= GVL.lc[0].valve_guide[1]);
GVL.arrValve_PM[64](in_out:= GVL.lc[0].valve_stopper[0]);
GVL.arrValve_PM[65](in_out:= GVL.lc[0].valve_stopper[1]);
GVL.arrValve_PM[66](in_out:= GVL.lc[0].lateral.valve_lift);
GVL.arrValve_PM[67](in_out:= GVL.lc[0].lateral.valve_clamp[0]);
GVL.arrValve_PM[68](in_out:= GVL.lc[0].lateral.valve_clamp[1]);
GVL.arrValve_PM[69](in_out:= GVL.lc[1].valve_guide[0]);
GVL.arrValve_PM[70](in_out:= GVL.lc[1].valve_guide[1]);
GVL.arrValve_PM[71](in_out:= GVL.lc[1].valve_stopper[0]);
GVL.arrValve_PM[72](in_out:= GVL.lc[1].valve_stopper[1]);
GVL.arrValve_PM[73](in_out:= GVL.lc[1].lateral.valve_lift);
GVL.arrValve_PM[74](in_out:= GVL.lc[1].lateral.valve_clamp[0]);
GVL.arrValve_PM[75](in_out:= GVL.lc[1].lateral.valve_clamp[1]);//end of lc
GVL.arrValve_PM[76](in_out:= GVL.fr[0].valve);
GVL.arrValve_PM[77](in_out:= GVL.fr[1].valve);//end of fr

//////////////////////////////////////REM/////////////////////////////////////
GVL.arrValve_Rem[0](in_out:= GVL.rem[0].infeed[0].valve_stopper);
GVL.arrValve_Rem[1](in_out:= GVL.rem[0].lift[0].valve_clamp);
GVL.arrValve_Rem[2](in_out:= GVL.rem[0].lift[0].valve_perturbation[0]);
GVL.arrValve_Rem[3](in_out:= GVL.rem[0].lift[0].valve_perturbation[1]);
GVL.arrValve_Rem[4](in_out:= GVL.rem[0].lift[0].valve_perturbation[2]);
GVL.arrValve_Rem[5](in_out:= GVL.rem[0].lift[0].valve_perturbation[3]);
GVL.arrValve_Rem[6](in_out:= GVL.rem[0].infeed[1].valve_stopper);
GVL.arrValve_Rem[7](in_out:= GVL.rem[0].lift[1].valve_clamp);
GVL.arrValve_Rem[8](in_out:= GVL.rem[0].lift[1].valve_perturbation[0]);
GVL.arrValve_Rem[9](in_out:= GVL.rem[0].lift[1].valve_perturbation[1]);
GVL.arrValve_Rem[10](in_out:= GVL.rem[0].lift[1].valve_perturbation[2]);
GVL.arrValve_Rem[11](in_out:= GVL.rem[0].lift[1].valve_perturbation[3]);
GVL.arrValve_Rem[12](in_out:= GVL.rem[1].infeed[0].valve_stopper);
GVL.arrValve_Rem[13](in_out:= GVL.rem[1].lift[0].valve_clamp);
GVL.arrValve_Rem[14](in_out:= GVL.rem[1].lift[0].valve_perturbation[0]);
GVL.arrValve_Rem[15](in_out:= GVL.rem[1].lift[0].valve_perturbation[1]);
GVL.arrValve_Rem[16](in_out:= GVL.rem[1].lift[0].valve_perturbation[2]);
GVL.arrValve_Rem[17](in_out:= GVL.rem[1].lift[0].valve_perturbation[3]);
GVL.arrValve_Rem[18](in_out:= GVL.rem[1].infeed[1].valve_stopper);
GVL.arrValve_Rem[19](in_out:= GVL.rem[1].lift[1].valve_clamp);
GVL.arrValve_Rem[20](in_out:= GVL.rem[1].lift[1].valve_perturbation[0]);
GVL.arrValve_Rem[21](in_out:= GVL.rem[1].lift[1].valve_perturbation[1]);
GVL.arrValve_Rem[22](in_out:= GVL.rem[1].lift[1].valve_perturbation[2]);
GVL.arrValve_Rem[23](in_out:= GVL.rem[1].lift[1].valve_perturbation[3]);
GVL.arrValve_Rem[24](in_out:= GVL.rem[2].infeed[0].valve_stopper);
GVL.arrValve_Rem[25](in_out:= GVL.rem[2].lift[0].valve_clamp);
GVL.arrValve_Rem[26](in_out:= GVL.rem[2].lift[0].valve_perturbation[0]);
GVL.arrValve_Rem[27](in_out:= GVL.rem[2].lift[0].valve_perturbation[1]);
GVL.arrValve_Rem[28](in_out:= GVL.rem[2].lift[0].valve_perturbation[2]);
GVL.arrValve_Rem[29](in_out:= GVL.rem[2].lift[0].valve_perturbation[3]);
GVL.arrValve_Rem[30](in_out:= GVL.rem[2].infeed[1].valve_stopper);
GVL.arrValve_Rem[31](in_out:= GVL.rem[2].lift[1].valve_clamp);
GVL.arrValve_Rem[32](in_out:= GVL.rem[2].lift[1].valve_perturbation[0]);
GVL.arrValve_Rem[33](in_out:= GVL.rem[2].lift[1].valve_perturbation[1]);
GVL.arrValve_Rem[34](in_out:= GVL.rem[2].lift[1].valve_perturbation[2]);
GVL.arrValve_Rem[35](in_out:= GVL.rem[2].lift[1].valve_perturbation[3]);
GVL.arrValve_Rem[36](in_out:= GVL.rem[3].infeed[0].valve_stopper);
GVL.arrValve_Rem[37](in_out:= GVL.rem[3].lift[0].valve_clamp);
GVL.arrValve_Rem[38](in_out:= GVL.rem[3].lift[0].valve_perturbation[0]);
GVL.arrValve_Rem[39](in_out:= GVL.rem[3].lift[0].valve_perturbation[1]);
GVL.arrValve_Rem[40](in_out:= GVL.rem[3].lift[0].valve_perturbation[2]);
GVL.arrValve_Rem[41](in_out:= GVL.rem[3].lift[0].valve_perturbation[3]);
GVL.arrValve_Rem[42](in_out:= GVL.rem[3].infeed[1].valve_stopper);
GVL.arrValve_Rem[43](in_out:= GVL.rem[3].lift[1].valve_clamp);
GVL.arrValve_Rem[44](in_out:= GVL.rem[3].lift[1].valve_perturbation[0]);
GVL.arrValve_Rem[45](in_out:= GVL.rem[3].lift[1].valve_perturbation[1]);
GVL.arrValve_Rem[46](in_out:= GVL.rem[3].lift[1].valve_perturbation[2]);
GVL.arrValve_Rem[47](in_out:= GVL.rem[3].lift[1].valve_perturbation[3]);
GVL.arrValve_Rem[48](in_out:= GVL.rem[4].infeed[0].valve_stopper);
GVL.arrValve_Rem[49](in_out:= GVL.rem[4].lift[0].valve_clamp);
GVL.arrValve_Rem[50](in_out:= GVL.rem[4].lift[0].valve_perturbation[0]);
GVL.arrValve_Rem[51](in_out:= GVL.rem[4].lift[0].valve_perturbation[1]);
GVL.arrValve_Rem[52](in_out:= GVL.rem[4].lift[0].valve_perturbation[2]);
GVL.arrValve_Rem[53](in_out:= GVL.rem[4].lift[0].valve_perturbation[3]);
GVL.arrValve_Rem[54](in_out:= GVL.rem[4].infeed[1].valve_stopper);
GVL.arrValve_Rem[55](in_out:= GVL.rem[4].lift[1].valve_clamp);
GVL.arrValve_Rem[56](in_out:= GVL.rem[4].lift[1].valve_perturbation[0]);
GVL.arrValve_Rem[57](in_out:= GVL.rem[4].lift[1].valve_perturbation[1]);
GVL.arrValve_Rem[58](in_out:= GVL.rem[4].lift[1].valve_perturbation[2]);
GVL.arrValve_Rem[59](in_out:= GVL.rem[4].lift[1].valve_perturbation[3]);
GVL.arrValve_Rem[60](in_out:= GVL.rem[5].infeed[0].valve_stopper);
GVL.arrValve_Rem[61](in_out:= GVL.rem[5].lift[0].valve_clamp);
GVL.arrValve_Rem[62](in_out:= GVL.rem[5].lift[0].valve_perturbation[0]);
GVL.arrValve_Rem[63](in_out:= GVL.rem[5].lift[0].valve_perturbation[1]);
GVL.arrValve_Rem[64](in_out:= GVL.rem[5].lift[0].valve_perturbation[2]);
GVL.arrValve_Rem[65](in_out:= GVL.rem[5].lift[0].valve_perturbation[3]);
GVL.arrValve_Rem[66](in_out:= GVL.rem[5].infeed[1].valve_stopper);
GVL.arrValve_Rem[67](in_out:= GVL.rem[5].lift[1].valve_clamp);
GVL.arrValve_Rem[68](in_out:= GVL.rem[5].lift[1].valve_perturbation[0]);
GVL.arrValve_Rem[69](in_out:= GVL.rem[5].lift[1].valve_perturbation[1]);
GVL.arrValve_Rem[70](in_out:= GVL.rem[5].lift[1].valve_perturbation[2]);
GVL.arrValve_Rem[71](in_out:= GVL.rem[5].lift[1].valve_perturbation[3]);
GVL.arrValve_Rem[72](in_out:= GVL.rem[6].infeed[0].valve_stopper);
GVL.arrValve_Rem[73](in_out:= GVL.rem[6].lift[0].valve_clamp);
GVL.arrValve_Rem[74](in_out:= GVL.rem[6].lift[0].valve_perturbation[0]);
GVL.arrValve_Rem[75](in_out:= GVL.rem[6].lift[0].valve_perturbation[1]);
GVL.arrValve_Rem[76](in_out:= GVL.rem[6].lift[0].valve_perturbation[2]);
GVL.arrValve_Rem[77](in_out:= GVL.rem[6].lift[0].valve_perturbation[3]);
GVL.arrValve_Rem[78](in_out:= GVL.rem[6].infeed[1].valve_stopper);
GVL.arrValve_Rem[79](in_out:= GVL.rem[6].lift[1].valve_clamp);
GVL.arrValve_Rem[80](in_out:= GVL.rem[6].lift[1].valve_perturbation[0]);
GVL.arrValve_Rem[81](in_out:= GVL.rem[6].lift[1].valve_perturbation[1]);
GVL.arrValve_Rem[82](in_out:= GVL.rem[6].lift[1].valve_perturbation[2]);
GVL.arrValve_Rem[83](in_out:= GVL.rem[6].lift[1].valve_perturbation[3]);
GVL.arrValve_Rem[84](in_out:= GVL.rem[7].infeed[0].valve_stopper);
GVL.arrValve_Rem[85](in_out:= GVL.rem[7].lift[0].valve_clamp);
GVL.arrValve_Rem[86](in_out:= GVL.rem[7].lift[0].valve_perturbation[0]);
GVL.arrValve_Rem[87](in_out:= GVL.rem[7].lift[0].valve_perturbation[1]);
GVL.arrValve_Rem[88](in_out:= GVL.rem[7].lift[0].valve_perturbation[2]);
GVL.arrValve_Rem[89](in_out:= GVL.rem[7].lift[0].valve_perturbation[3]);
GVL.arrValve_Rem[90](in_out:= GVL.rem[7].infeed[1].valve_stopper);
GVL.arrValve_Rem[91](in_out:= GVL.rem[7].lift[1].valve_clamp);
GVL.arrValve_Rem[92](in_out:= GVL.rem[7].lift[1].valve_perturbation[0]);
GVL.arrValve_Rem[93](in_out:= GVL.rem[7].lift[1].valve_perturbation[1]);
GVL.arrValve_Rem[94](in_out:= GVL.rem[7].lift[1].valve_perturbation[2]);
GVL.arrValve_Rem[95](in_out:= GVL.rem[7].lift[1].valve_perturbation[3]);
GVL.arrValve_Rem[96](in_out:= GVL.rem[8].infeed[0].valve_stopper);
GVL.arrValve_Rem[97](in_out:= GVL.rem[8].lift[0].valve_clamp);
GVL.arrValve_Rem[98](in_out:= GVL.rem[8].lift[0].valve_perturbation[0]);
GVL.arrValve_Rem[99](in_out:= GVL.rem[8].lift[0].valve_perturbation[1]);
GVL.arrValve_Rem[100](in_out:= GVL.rem[8].lift[0].valve_perturbation[2]);
GVL.arrValve_Rem[101](in_out:= GVL.rem[8].lift[0].valve_perturbation[3]);
GVL.arrValve_Rem[102](in_out:= GVL.rem[8].infeed[1].valve_stopper);
GVL.arrValve_Rem[103](in_out:= GVL.rem[8].lift[1].valve_clamp);
GVL.arrValve_Rem[104](in_out:= GVL.rem[8].lift[1].valve_perturbation[0]);
GVL.arrValve_Rem[105](in_out:= GVL.rem[8].lift[1].valve_perturbation[1]);
GVL.arrValve_Rem[106](in_out:= GVL.rem[8].lift[1].valve_perturbation[2]);
GVL.arrValve_Rem[107](in_out:= GVL.rem[8].lift[1].valve_perturbation[3]);
GVL.arrValve_Rem[108](in_out:= GVL.rem[9].infeed[0].valve_stopper);
GVL.arrValve_Rem[109](in_out:= GVL.rem[9].lift[0].valve_clamp);
GVL.arrValve_Rem[110](in_out:= GVL.rem[9].lift[0].valve_perturbation[0]);
GVL.arrValve_Rem[111](in_out:= GVL.rem[9].lift[0].valve_perturbation[1]);
GVL.arrValve_Rem[112](in_out:= GVL.rem[9].lift[0].valve_perturbation[2]);
GVL.arrValve_Rem[113](in_out:= GVL.rem[9].lift[0].valve_perturbation[3]);
GVL.arrValve_Rem[114](in_out:= GVL.rem[9].infeed[1].valve_stopper);
GVL.arrValve_Rem[115](in_out:= GVL.rem[9].lift[1].valve_clamp);
GVL.arrValve_Rem[116](in_out:= GVL.rem[9].lift[1].valve_perturbation[0]);
GVL.arrValve_Rem[117](in_out:= GVL.rem[9].lift[1].valve_perturbation[1]);
GVL.arrValve_Rem[118](in_out:= GVL.rem[9].lift[1].valve_perturbation[2]);
GVL.arrValve_Rem[119](in_out:= GVL.rem[9].lift[1].valve_perturbation[3]);




]]></ST>
      </Implementation>
    </Action>
    <Method Name="M_ads_bagmachines" Id="{e17f7489-04b4-4071-b5e7-5d660350d153}">
      <Declaration><![CDATA[METHOD M_ads_bagmachines : BOOL
VAR_INPUT
END_VAR
VAR
	
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[(*
ton_1ms(PT:=T#2MS);
FOR i:=0 TO 2 DO
	GVL.adsread[i](
				NETID:=GVL.netId_bagmachie[i] , 
				PORT:=851 , 
				IDXGRP:=16#00004020 , 
				IDXOFFS:=100 , 
				LEN:= SIZEOF(GVL.adsArr_bagMachine[i].inArr), 
				DESTADDR:= ADR(GVL.adsArr_bagMachine[i].inArr), 
				READ:=GVL.bread[i] , 
				TMOUT:=T#2S , 
				BUSY=> , 
				ERR=> , 
				ERRID=> );
	GVL.adswrite[i](
				NETID:=GVL.netId_bagmachie[i] , 
				PORT:=851, 
				IDXGRP:=16#00004020, 
				IDXOFFS:=200, 
				LEN:=SIZEOF(GVL.adsArr_bagMachine[i].outArr) , 
				SRCADDR:=ADR(GVL.adsArr_bagMachine[i].outArr) , 
				WRITE:=GVL.bwrite[i] , 
				TMOUT:=T#2S , 
				BUSY=> , 
				ERR=> , 
				ERRID=> );
		END_FOR
CASE iAds OF 
	0:
		FOR i:=0 TO 2 DO
			GVL.bread[i]	:=FALSE;
			GVL.bwrite[i]	:=FALSE;
		END_FOR
		iAds	:=1;
	1:
		ton_1ms.IN	:= TRUE;
		IF ton_1ms.Q THEN
			ton_1ms.IN	:= FALSE;
			iAds	:=2;
		END_IF
	2:
		FOR i:=0 TO 2 DO
			GVL.bread[i]	:=TRUE;
			GVL.bwrite[i]	:=TRUE;
		END_FOR
		iAds	:=3;
	3:
		ton_1ms.IN	:= TRUE;
		IF ton_1ms.Q THEN
			ton_1ms.IN	:= FALSE;
			iAds	:=0;
		END_IF		
END_CASE

*)
	]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_agingTest" Id="{36e0329c-3d97-41f2-a822-50d06b5c64d9}">
      <Declaration><![CDATA[METHOD M_agingTest : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_checkError" Id="{7fd72e19-e986-48cb-880b-fcc78599fe02}">
      <Declaration><![CDATA[METHOD M_checkError : BOOL
VAR_INPUT
END_VAR
VAR
	i	: INT;
END_VAR

]]></Declaration>
      <Implementation>
        <ST><![CDATA[M_checkError	:= FALSE;
xErr_converterMotors	:= FALSE;
FOR i:=0 TO 57 DO
	IF GVL.ref_fbconverterMotor[i]^.xErr THEN
		xErr_converterMotors	:= TRUE;
	END_IF
END_FOR
M_checkError	:= TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_mappingIO" Id="{e0caa2a2-200b-484a-9495-8cf8901a2628}">
      <Declaration><![CDATA[METHOD M_mappingIO 
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[////////////////////////////////////////////////////ReM////////////////////////////////////////////////////////////////
GVL.fb_remIOmapping[0](iReM:= 0);
GVL.fb_remIOmapping[1](iReM:= 1);
GVL.fb_remIOmapping[2](iReM:= 2);
GVL.fb_remIOmapping[3](iReM:= 3);
GVL.fb_remIOmapping[4](iReM:= 4);
GVL.fb_remIOmapping[5](iReM:= 5);
GVL.fb_remIOmapping[6](iReM:= 6);
GVL.fb_remIOmapping[7](iReM:= 7);
GVL.fb_remIOmapping[8](iReM:= 8);
GVL.fb_remIOmapping[9](iReM:= 9);
GVL.fb_remAxisMapping[0](iReM :=0,iLift:=0,sNetID:='192.168.11.159.4.1',nSlaveAddr:=1005);
GVL.fb_remAxisMapping[1](iReM :=0,iLift:=1,sNetID:='192.168.11.159.4.1',nSlaveAddr:=1006);
GVL.fb_remAxisMapping[2](iReM :=1,iLift:=0,sNetID:='192.168.11.159.4.1',nSlaveAddr:=1009);
GVL.fb_remAxisMapping[3](iReM :=1,iLift:=1,sNetID:='192.168.11.159.4.1',nSlaveAddr:=1010);
GVL.fb_remAxisMapping[4](iReM :=2,iLift:=0,sNetID:='192.168.11.159.4.1',nSlaveAddr:=1013);
GVL.fb_remAxisMapping[5](iReM :=2,iLift:=1,sNetID:='192.168.11.159.4.1',nSlaveAddr:=1014);
GVL.fb_remAxisMapping[6](iReM :=3,iLift:=0,sNetID:='192.168.11.159.4.1',nSlaveAddr:=1017);
GVL.fb_remAxisMapping[7](iReM :=3,iLift:=1,sNetID:='192.168.11.159.4.1',nSlaveAddr:=1018);
GVL.fb_remAxisMapping[8](iReM :=4,iLift:=0,sNetID:='192.168.11.159.4.1',nSlaveAddr:=1021);
GVL.fb_remAxisMapping[9](iReM :=4,iLift:=1,sNetID:='192.168.11.159.4.1',nSlaveAddr:=1022);
GVL.fb_remAxisMapping[10](iReM :=5,iLift:=0,sNetID:='192.168.11.159.4.1',nSlaveAddr:=1025);
GVL.fb_remAxisMapping[11](iReM :=5,iLift:=1,sNetID:='192.168.11.159.4.1',nSlaveAddr:=1026);
GVL.fb_remAxisMapping[12](iReM :=6,iLift:=0,sNetID:='192.168.11.159.4.1',nSlaveAddr:=1029);
GVL.fb_remAxisMapping[13](iReM :=6,iLift:=1,sNetID:='192.168.11.159.4.1',nSlaveAddr:=1030);
GVL.fb_remAxisMapping[14](iReM :=7,iLift:=0,sNetID:='192.168.11.159.4.1',nSlaveAddr:=1033);
GVL.fb_remAxisMapping[15](iReM :=7,iLift:=1,sNetID:='192.168.11.159.4.1',nSlaveAddr:=1034);
GVL.fb_remAxisMapping[16](iReM :=8,iLift:=0,sNetID:='192.168.11.159.4.1',nSlaveAddr:=1037);
GVL.fb_remAxisMapping[17](iReM :=8,iLift:=1,sNetID:='192.168.11.159.4.1',nSlaveAddr:=1038);
GVL.fb_remAxisMapping[18](iReM :=9,iLift:=0,sNetID:='192.168.11.159.4.1',nSlaveAddr:=1041);
GVL.fb_remAxisMapping[19](iReM :=9,iLift:=1,sNetID:='192.168.11.159.4.1',nSlaveAddr:=1042);
GVL.fbAxisCtrl_Lift[0](stAxisCtrl:=GVL.stAxisCtrl_Lift[0],IN_OUT:=GVL.rem[0].lift[0].st_mcAxis);
GVL.fbAxisCtrl_Lift[1](stAxisCtrl:=GVL.stAxisCtrl_Lift[1],IN_OUT:=GVL.rem[0].lift[1].st_mcAxis);
GVL.fbAxisCtrl_Lift[2](stAxisCtrl:=GVL.stAxisCtrl_Lift[2],IN_OUT:=GVL.rem[1].lift[0].st_mcAxis);
GVL.fbAxisCtrl_Lift[3](stAxisCtrl:=GVL.stAxisCtrl_Lift[3],IN_OUT:=GVL.rem[1].lift[1].st_mcAxis);
GVL.fbAxisCtrl_Lift[4](stAxisCtrl:=GVL.stAxisCtrl_Lift[4],IN_OUT:=GVL.rem[2].lift[0].st_mcAxis);
GVL.fbAxisCtrl_Lift[5](stAxisCtrl:=GVL.stAxisCtrl_Lift[5],IN_OUT:=GVL.rem[2].lift[1].st_mcAxis);
GVL.fbAxisCtrl_Lift[6](stAxisCtrl:=GVL.stAxisCtrl_Lift[6],IN_OUT:=GVL.rem[3].lift[0].st_mcAxis);
GVL.fbAxisCtrl_Lift[7](stAxisCtrl:=GVL.stAxisCtrl_Lift[7],IN_OUT:=GVL.rem[3].lift[1].st_mcAxis);
GVL.fbAxisCtrl_Lift[8](stAxisCtrl:=GVL.stAxisCtrl_Lift[8],IN_OUT:=GVL.rem[4].lift[0].st_mcAxis);
GVL.fbAxisCtrl_Lift[9](stAxisCtrl:=GVL.stAxisCtrl_Lift[9],IN_OUT:=GVL.rem[4].lift[1].st_mcAxis);
GVL.fbAxisCtrl_Lift[10](stAxisCtrl:=GVL.stAxisCtrl_Lift[10],IN_OUT:=GVL.rem[5].lift[0].st_mcAxis);
GVL.fbAxisCtrl_Lift[11](stAxisCtrl:=GVL.stAxisCtrl_Lift[11],IN_OUT:=GVL.rem[5].lift[1].st_mcAxis);
GVL.fbAxisCtrl_Lift[12](stAxisCtrl:=GVL.stAxisCtrl_Lift[12],IN_OUT:=GVL.rem[6].lift[0].st_mcAxis);
GVL.fbAxisCtrl_Lift[13](stAxisCtrl:=GVL.stAxisCtrl_Lift[13],IN_OUT:=GVL.rem[6].lift[1].st_mcAxis);
GVL.fbAxisCtrl_Lift[14](stAxisCtrl:=GVL.stAxisCtrl_Lift[14],IN_OUT:=GVL.rem[7].lift[0].st_mcAxis);
GVL.fbAxisCtrl_Lift[15](stAxisCtrl:=GVL.stAxisCtrl_Lift[15],IN_OUT:=GVL.rem[7].lift[1].st_mcAxis);
GVL.fbAxisCtrl_Lift[16](stAxisCtrl:=GVL.stAxisCtrl_Lift[16],IN_OUT:=GVL.rem[8].lift[0].st_mcAxis);
GVL.fbAxisCtrl_Lift[17](stAxisCtrl:=GVL.stAxisCtrl_Lift[17],IN_OUT:=GVL.rem[8].lift[1].st_mcAxis);
GVL.fbAxisCtrl_Lift[18](stAxisCtrl:=GVL.stAxisCtrl_Lift[18],IN_OUT:=GVL.rem[9].lift[0].st_mcAxis);
GVL.fbAxisCtrl_Lift[19](stAxisCtrl:=GVL.stAxisCtrl_Lift[19],IN_OUT:=GVL.rem[9].lift[1].st_mcAxis);


////////////////////////////////////////////////////PM////////////////////////////////////////////////////////////////
GVL.fb_rmIOmapping[0](iRm:= 0);
GVL.fb_rmIOmapping[1](iRm:= 1);
GVL.fb_rmIOmapping[2](iRm:= 2);
GVL.fb_rmIOmapping[3](iRm:= 3);
GVL.fb_rmIOmapping[4](iRm:= 4);
GVL.fb_pmAxisMapping[0](iPM :=0,iBuffer:=0,sNetID:='192.168.11.159.5.1',nSlaveAddr:=1010);
GVL.fb_pmAxisMapping[1](iPM :=0,iBuffer:=1,sNetID:='192.168.11.159.5.1',nSlaveAddr:=1011);
GVL.fb_pmAxisMapping[2](iPM :=1,iBuffer:=0,sNetID:='192.168.11.159.5.1',nSlaveAddr:=1012);
GVL.fb_pmAxisMapping[3](iPM :=1,iBuffer:=1,sNetID:='192.168.11.159.5.1',nSlaveAddr:=1013);
GVL.fb_pmAxisMapping[4](iPM :=2,iBuffer:=0,sNetID:='192.168.11.159.5.1',nSlaveAddr:=1020);
GVL.fb_pmAxisMapping[5](iPM :=2,iBuffer:=1,sNetID:='192.168.11.159.5.1',nSlaveAddr:=1021);
GVL.fb_pmAxisMapping[6](iPM :=3,iBuffer:=0,sNetID:='192.168.11.159.5.1',nSlaveAddr:=1022);
GVL.fb_pmAxisMapping[7](iPM :=3,iBuffer:=1,sNetID:='192.168.11.159.5.1',nSlaveAddr:=1023);
GVL.fb_pmAxisMapping[8](iPM :=4,iBuffer:=0,sNetID:='192.168.11.159.5.1',nSlaveAddr:=1028);
GVL.fb_pmAxisMapping[9](iPM :=4,iBuffer:=1,sNetID:='192.168.11.159.5.1',nSlaveAddr:=1029);
GVL.fb_pmAxisMapping[10](iPM :=5,iBuffer:=0,sNetID:='192.168.11.159.5.1',nSlaveAddr:=1030);
GVL.fb_pmAxisMapping[11](iPM :=5,iBuffer:=1,sNetID:='192.168.11.159.5.1',nSlaveAddr:=1031);
GVL.fb_pmAxisMapping[12](iPM :=6,iBuffer:=0,sNetID:='192.168.11.159.5.1',nSlaveAddr:=1036);
GVL.fb_pmAxisMapping[13](iPM :=6,iBuffer:=1,sNetID:='192.168.11.159.5.1',nSlaveAddr:=1037);
GVL.fb_pmAxisMapping[14](iPM :=7,iBuffer:=0,sNetID:='192.168.11.159.5.1',nSlaveAddr:=1038);
GVL.fb_pmAxisMapping[15](iPM :=7,iBuffer:=1,sNetID:='192.168.11.159.5.1',nSlaveAddr:=1039);
GVL.fb_pmAxisMapping[16](iPM :=8,iBuffer:=0,sNetID:='192.168.11.159.5.1',nSlaveAddr:=1046);
GVL.fb_pmAxisMapping[17](iPM :=8,iBuffer:=1,sNetID:='192.168.11.159.5.1',nSlaveAddr:=1047);
GVL.fb_pmAxisMapping[18](iPM :=9,iBuffer:=0,sNetID:='192.168.11.159.5.1',nSlaveAddr:=1048);
GVL.fb_pmAxisMapping[19](iPM :=9,iBuffer:=1,sNetID:='192.168.11.159.5.1',nSlaveAddr:=1049);

GVL.fbAxisCtrl_Buffer[0](stAxisCtrl:=GVL.stAxisCtrl_Buffer[0],IN_OUT:=GVL.pm[0].buffer[0].st_mcAxis);
GVL.fbAxisCtrl_Buffer[1](stAxisCtrl:=GVL.stAxisCtrl_Buffer[1],IN_OUT:=GVL.pm[0].buffer[1].st_mcAxis);
GVL.fbAxisCtrl_Buffer[2](stAxisCtrl:=GVL.stAxisCtrl_Buffer[2],IN_OUT:=GVL.pm[1].buffer[0].st_mcAxis);
GVL.fbAxisCtrl_Buffer[3](stAxisCtrl:=GVL.stAxisCtrl_Buffer[3],IN_OUT:=GVL.pm[1].buffer[1].st_mcAxis);
GVL.fbAxisCtrl_Buffer[4](stAxisCtrl:=GVL.stAxisCtrl_Buffer[4],IN_OUT:=GVL.pm[2].buffer[0].st_mcAxis);
GVL.fbAxisCtrl_Buffer[5](stAxisCtrl:=GVL.stAxisCtrl_Buffer[5],IN_OUT:=GVL.pm[2].buffer[1].st_mcAxis);
GVL.fbAxisCtrl_Buffer[6](stAxisCtrl:=GVL.stAxisCtrl_Buffer[6],IN_OUT:=GVL.pm[3].buffer[0].st_mcAxis);
GVL.fbAxisCtrl_Buffer[7](stAxisCtrl:=GVL.stAxisCtrl_Buffer[7],IN_OUT:=GVL.pm[3].buffer[1].st_mcAxis);
GVL.fbAxisCtrl_Buffer[8](stAxisCtrl:=GVL.stAxisCtrl_Buffer[8],IN_OUT:=GVL.pm[4].buffer[0].st_mcAxis);
GVL.fbAxisCtrl_Buffer[9](stAxisCtrl:=GVL.stAxisCtrl_Buffer[9],IN_OUT:=GVL.pm[4].buffer[1].st_mcAxis);
GVL.fbAxisCtrl_Buffer[10](stAxisCtrl:=GVL.stAxisCtrl_Buffer[10],IN_OUT:=GVL.pm[5].buffer[0].st_mcAxis);
GVL.fbAxisCtrl_Buffer[11](stAxisCtrl:=GVL.stAxisCtrl_Buffer[11],IN_OUT:=GVL.pm[5].buffer[1].st_mcAxis);
GVL.fbAxisCtrl_Buffer[12](stAxisCtrl:=GVL.stAxisCtrl_Buffer[12],IN_OUT:=GVL.pm[6].buffer[0].st_mcAxis);
GVL.fbAxisCtrl_Buffer[13](stAxisCtrl:=GVL.stAxisCtrl_Buffer[13],IN_OUT:=GVL.pm[6].buffer[1].st_mcAxis);
GVL.fbAxisCtrl_Buffer[14](stAxisCtrl:=GVL.stAxisCtrl_Buffer[14],IN_OUT:=GVL.pm[7].buffer[0].st_mcAxis);
GVL.fbAxisCtrl_Buffer[15](stAxisCtrl:=GVL.stAxisCtrl_Buffer[15],IN_OUT:=GVL.pm[7].buffer[1].st_mcAxis);
GVL.fbAxisCtrl_Buffer[16](stAxisCtrl:=GVL.stAxisCtrl_Buffer[16],IN_OUT:=GVL.pm[8].buffer[0].st_mcAxis);
GVL.fbAxisCtrl_Buffer[17](stAxisCtrl:=GVL.stAxisCtrl_Buffer[17],IN_OUT:=GVL.pm[8].buffer[1].st_mcAxis);
GVL.fbAxisCtrl_Buffer[18](stAxisCtrl:=GVL.stAxisCtrl_Buffer[18],IN_OUT:=GVL.pm[9].buffer[0].st_mcAxis);
GVL.fbAxisCtrl_Buffer[19](stAxisCtrl:=GVL.stAxisCtrl_Buffer[19],IN_OUT:=GVL.pm[9].buffer[1].st_mcAxis);


////////////////////////////////////////////////////LC&LB&FR////////////////////////////////////////////////////////////////
GVL.fb_lcIOmappiing[0](iLc:= 0,mcAxis:=GVL.lc[0].lateral.mcAxis,IN_OUT:=GVL.lc[0].lateral.st_mcAxis,nSlaveAddr:=1006,sNetID:='192.168.11.159.5.1');
GVL.fb_lcIOmappiing[1](iLc:= 1,mcAxis:=GVL.lc[1].lateral.mcAxis,IN_OUT:=GVL.lc[1].lateral.st_mcAxis,nSlaveAddr:=1055,sNetID:='192.168.11.159.5.1');
GVL.fbAxisCtrl_LC[0](stAxisCtrl:=GVL.stAxisCtrl_LC[0],IN_OUT:=GVL.lc[0].lateral.st_mcAxis);
GVL.fbAxisCtrl_LC[1](stAxisCtrl:=GVL.stAxisCtrl_LC[1],IN_OUT:=GVL.lc[1].lateral.st_mcAxis);
GVL.fb_lbIOmappiing[0](iLb:=0);
GVL.fb_lbIOmappiing[1](iLb:=1);
GVL.fb_frIOmappiing[0](iFR:= 0,mcAxis:=GVL.fr[0].mcAxis,IN_OUT:=GVL.fr[0].st_mcAxis,nSlaveAddr:=1016,sNetID:='192.168.11.159.5.1');
GVL.fb_frIOmappiing[1](iFR:= 1,mcAxis:=GVL.fr[1].mcAxis,IN_OUT:=GVL.fr[1].st_mcAxis,nSlaveAddr:=1042,sNetID:='192.168.11.159.5.1');
GVL.fbAxisCtrl_FR[0](stAxisCtrl:=GVL.stAxisCtrl_FR[0],IN_OUT:=GVL.fr[0].st_mcAxis);
GVL.fbAxisCtrl_FR[1](stAxisCtrl:=GVL.stAxisCtrl_FR[1],IN_OUT:=GVL.fr[1].st_mcAxis);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_measuringLC" Id="{d676c292-2f0e-482c-8f77-a1f869b0f883}">
      <Declaration><![CDATA[METHOD M_measuringLC : BOOL
VAR_INPUT
END_VAR

VAR
	i: INT;
	j: INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
//IF Process Data In(BYTE1!=0) try Process Data Out(BYTE0=64:Teach-in)
FOR i :=1 TO 32 DO
	GVL.ibyteNum[i] := i;
END_FOR
FOR i:=1 TO 32 DO	
	GVL.stMeasuringLC.arByte[i].Ch[0]	:= GVL.byteLC[i].0;
	GVL.stMeasuringLC.arByte[i].Ch[1]	:= GVL.byteLC[i].1;
	GVL.stMeasuringLC.arByte[i].Ch[2]	:= GVL.byteLC[i].2;
	GVL.stMeasuringLC.arByte[i].Ch[3]	:= GVL.byteLC[i].3;
	GVL.stMeasuringLC.arByte[i].Ch[4]	:= GVL.byteLC[i].4;
	GVL.stMeasuringLC.arByte[i].Ch[5]	:= GVL.byteLC[i].5;
	GVL.stMeasuringLC.arByte[i].Ch[6]	:= GVL.byteLC[i].6;
	GVL.stMeasuringLC.arByte[i].Ch[7]	:= GVL.byteLC[i].7;
END_FOR


GVL.stByte REF= GVL.stMeasuringLC;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_ReM" Id="{64ae7519-e3a0-402c-ae7d-63672adcb499}">
      <Declaration><![CDATA[METHOD M_ReM : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
//========== Lift0 Axis Config ==========
(*GVL.rem[0].lift[0].mcAxis
(
	ZSN		:= GVL.rem[0].lift[0].limit_sensor[2] OR GVL.rem[0].lift[0].st_mcAxis.xHoming,
	ZSP		:= GVL.rem[0].lift[0].limit_sensor[1]	OR GVL.rem[0].lift[0].st_mcAxis.xHoming,
	IN_OUT	:= GVL.rem[0].lift[0].st_mcAxis, 
	AXIS	:= GVL.rem[0].lift[0].Axisref, 
);
GVL.rem[0].lift[0].st_mcAxis.bPosSensorShow	:= TRUE;
GVL.rem[0].lift[0].st_mcAxis.bNegSensorShow	:= TRUE;
GVL.rem[0].lift[0].st_mcAxis.bStopButtonShow	:= TRUE;
GVL.rem[0].lift[0].st_mcAxis.rMaxAcceleration	:= 50000;
GVL.rem[0].lift[0].st_mcAxis.rMaxDeceleration	:= 50000;
GVL.rem[0].lift[0].st_mcAxis.rMaxJerk			:= 500000;
GVL.rem[0].lift[0].st_mcAxis.rAcceleration	:= 2500;
GVL.rem[0].lift[0].st_mcAxis.rDeceleration	:= 2500;
GVL.rem[0].lift[0].st_mcAxis.rJerk			:= 12500;
GVL.rem[0].lift[0].st_mcAxis.rMaxVelocity		:= 100;
GVL.rem[0].lift[0].st_mcAxis.rMaxDistance		:= 50;
GVL.rem[0].lift[0].st_mcAxis.bPosSen	:= GVL.rem[0].lift[0].limit_sensor[1] ;
GVL.rem[0].lift[0].st_mcAxis.bNegSen	:= GVL.rem[0].lift[0].limit_sensor[2] ;
GVL.rem[0].lift[0].st_mcAxis.mcHome.bCalibrationCam	:= GVL.rem[0].lift[0].limit_sensor[0];
GVL.rem[0].lift[0].st_mcAxis.bPositionSensor	:= GVL.rem[0].lift[0].limit_sensor[0];
GVL.rem[0].lift[0].st_mcAxis.bdirFW	:= TRUE;
GVL.rem[0].lift[0].st_mcAxis.rSetPos	:= 0;
GVL.rem[0].lift[0].st_mcAxis.sNetID := '192.168.11.159.1.1';
GVL.rem[0].lift[0].st_mcAxis.nSlaveAddr	:= 1002;
//GVL.rem[0].lift[0].st_mcAxis.nSubIndex := 16#1F;
//GVL.rem[0].lift[0].st_mcAxis.nIndex	:= 16#2005;


//========== Lift1 Axis Config ==========
GVL.rem[0].lift[1].mcAxis
(
	ZSN		:= GVL.rem[0].lift[1].limit_sensor[2] OR GVL.rem[0].lift[1].st_mcAxis.xHoming,
	ZSP		:= GVL.rem[0].lift[1].limit_sensor[1]	OR GVL.rem[0].lift[1].st_mcAxis.xHoming,
	IN_OUT	:= GVL.rem[0].lift[1].st_mcAxis, 
	AXIS	:= GVL.rem[0].lift[1].Axisref, 
);
GVL.rem[0].lift[1].st_mcAxis.bPosSensorShow	:= TRUE;
GVL.rem[0].lift[1].st_mcAxis.bNegSensorShow	:= TRUE;
GVL.rem[0].lift[1].st_mcAxis.bStopButtonShow	:= TRUE;
GVL.rem[0].lift[1].st_mcAxis.rMaxAcceleration	:= 50000;
GVL.rem[0].lift[1].st_mcAxis.rMaxDeceleration	:= 50000;
GVL.rem[0].lift[1].st_mcAxis.rMaxJerk			:= 500000;
GVL.rem[0].lift[1].st_mcAxis.rAcceleration	:= 2500;
GVL.rem[0].lift[1].st_mcAxis.rDeceleration	:= 2500;
GVL.rem[0].lift[1].st_mcAxis.rJerk			:= 12500;
GVL.rem[0].lift[1].st_mcAxis.rMaxVelocity		:= 100;
GVL.rem[0].lift[1].st_mcAxis.rMaxDistance		:= 50;
GVL.rem[0].lift[1].st_mcAxis.bPosSen	:= GVL.rem[0].lift[1].limit_sensor[1] ;
GVL.rem[0].lift[1].st_mcAxis.bNegSen	:= GVL.rem[0].lift[1].limit_sensor[2] ;
GVL.rem[0].lift[1].st_mcAxis.mcHome.bCalibrationCam	:= GVL.rem[0].lift[1].limit_sensor[0];
GVL.rem[0].lift[1].st_mcAxis.bPositionSensor	:= GVL.rem[0].lift[1].limit_sensor[0];
GVL.rem[0].lift[1].st_mcAxis.bdirFW	:= TRUE;
GVL.rem[0].lift[1].st_mcAxis.rSetPos	:= 0;
GVL.rem[0].lift[1].st_mcAxis.sNetID := '192.168.11.159.1.1';
GVL.rem[0].lift[1].st_mcAxis.nSlaveAddr	:= 1003;
//GVL.rem[0].lift[1].st_mcAxis.nSubIndex := 16#1F;
//GVL.rem[0].lift[1].st_mcAxis.nIndex	:=  16#2005;

CASE GVL.iFRtest OF 
	0:		
		//IF GVL.rem[0].lift[0].st_mcAxis.xHomingDone THEN
			IF GVL.bTs1 THEN
				GVL.rem[0].lift[0].st_mcAxis.mcMoveAbsolute.Execute := FALSE;
				GVL.iFRtest :=1;
			END_IF
		//END_IF
	1://open positon
		GVL.rem[0].lift[0].st_mcAxis.rActualPosSet := 0;
		GVL.rem[0].lift[0].st_mcAxis.rVelocitySet := 300;			
		GVL.rem[0].lift[0].st_mcAxis.mcMoveAbsolute.Execute := TRUE;
		GVL.rem[0].lift[1].st_mcAxis.rActualPosSet := 0;
		GVL.rem[0].lift[1].st_mcAxis.rVelocitySet := 300;			
		GVL.rem[0].lift[1].st_mcAxis.mcMoveAbsolute.Execute := TRUE;
		IF GVL.rem[0].lift[0].st_mcAxis.mcMoveAbsolute.Done AND GVL.rem[0].lift[1].st_mcAxis.mcMoveAbsolute.Done THEN
			GVL.rem[0].lift[0].st_mcAxis.mcMoveAbsolute.Execute := FALSE;
			GVL.rem[0].lift[1].st_mcAxis.mcMoveAbsolute.Execute := FALSE;
			GVL.iFRtest := 2;
		END_IF
	
	2:
		ton_delay.IN := TRUE;
		IF ton_delay.Q THEN
			ton_delay.IN := FALSE;
			GVL.iFRtest := 3;
		END_IF
	3://close position
		GVL.rem[0].lift[0].st_mcAxis.rActualPosSet := 424;
		GVL.rem[0].lift[0].st_mcAxis.rVelocitySet := 300;			
		GVL.rem[0].lift[0].st_mcAxis.mcMoveAbsolute.Execute := TRUE;
		GVL.rem[0].lift[1].st_mcAxis.rActualPosSet := 424;
		GVL.rem[0].lift[1].st_mcAxis.rVelocitySet := 300;			
		GVL.rem[0].lift[1].st_mcAxis.mcMoveAbsolute.Execute := TRUE;		
		GVL.st_mcAxis[1].mcMoveAbsolute.Execute := TRUE;
			IF GVL.rem[0].lift[0].st_mcAxis.mcMoveAbsolute.Done AND GVL.rem[0].lift[1].st_mcAxis.mcMoveAbsolute.Done THEN
				GVL.rem[0].lift[0].st_mcAxis.mcMoveAbsolute.Execute := FALSE;
				GVL.rem[0].lift[1].st_mcAxis.mcMoveAbsolute.Execute := FALSE;
				GVL.iFRtest := 4;
			END_IF   
	4://delay
		ton_delay.IN := TRUE;
		IF ton_delay.Q THEN
			ton_delay.IN := FALSE;
			GVL.iFRtest := 5;
		END_IF
	5://open positon
		GVL.rem[0].lift[0].st_mcAxis.rActualPosSet := 0;
		GVL.rem[0].lift[0].st_mcAxis.rVelocitySet := 300;			
		GVL.rem[0].lift[0].st_mcAxis.mcMoveAbsolute.Execute := TRUE;
		GVL.rem[0].lift[1].st_mcAxis.rActualPosSet := 0;
		GVL.rem[0].lift[1].st_mcAxis.rVelocitySet := 300;			
		GVL.rem[0].lift[1].st_mcAxis.mcMoveAbsolute.Execute := TRUE;
		IF GVL.rem[0].lift[0].st_mcAxis.mcMoveAbsolute.Done AND GVL.rem[0].lift[1].st_mcAxis.mcMoveAbsolute.Done THEN
			GVL.rem[0].lift[0].st_mcAxis.mcMoveAbsolute.Execute := FALSE;
			GVL.rem[0].lift[1].st_mcAxis.mcMoveAbsolute.Execute := FALSE;
			GVL.iFRtest := 6;
		END_IF
	6:
		GVL.iFRtest := 0;
END_CASE*)]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_reset" Id="{6f7eefb6-ce44-4b5b-85e3-b8cc16ed9392}">
      <Declaration><![CDATA[METHOD M_reset : BOOL
VAR_INPUT

END_VAR

VAR
	i	: INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
M_reset	:= FALSE;

CASE iReset OF
	0:
		iReset	:= 1;
	1:
		FOR i:=0 TO 57 DO
			GVL.ref_fbconverterMotor[i]^.reset	:= TRUE;
		END_FOR
		iReset	:=2;
	2:
		FOR i:=0 TO 57 DO
			GVL.ref_fbconverterMotor[i]^.reset	:= FALSE;
		END_FOR
		M_reset	:= TRUE;
		iReset	:=0;

END_CASE

]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_rfid" Id="{5c57c28f-978a-4ef1-8020-2ee35fe2b4f0}">
      <Declaration><![CDATA[METHOD M_rfid : BOOL
VAR_INPUT
END_VAR

VAR
	i: INT;
	
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[byte1 := ASC(string1);
FOR i:=0 TO 3 DO	
	GVL.arIn[i].Ch[0]	:= GVL.rfidIn[i].0;
	GVL.arIn[i].Ch[1]	:= GVL.rfidIn[i].1;
	GVL.arIn[i].Ch[2]	:= GVL.rfidIn[i].2;
	GVL.arIn[i].Ch[3]	:= GVL.rfidIn[i].3;
	GVL.arIn[i].Ch[4]	:= GVL.rfidIn[i].4;
	GVL.arIn[i].Ch[5]	:= GVL.rfidIn[i].5;
	GVL.arIn[i].Ch[6]	:= GVL.rfidIn[i].6;
	GVL.arIn[i].Ch[7]	:= GVL.rfidIn[i].7;
	GVL.rfidOut[i].0	:= GVL.arOut[i].Ch[0];
	GVL.rfidOut[i].1	:= GVL.arOut[i].Ch[1];
	GVL.rfidOut[i].2	:= GVL.arOut[i].Ch[2];
	GVL.rfidOut[i].3	:= GVL.arOut[i].Ch[3];
	GVL.rfidOut[i].4	:= GVL.arOut[i].Ch[4];
	GVL.rfidOut[i].5	:= GVL.arOut[i].Ch[5];
	GVL.rfidOut[i].6	:= GVL.arOut[i].Ch[6];
	GVL.rfidOut[i].7	:= GVL.arOut[i].Ch[7];	
END_FOR

FOR i:=4 TO 31 DO
	GVL.rfidOut[i] := INT_TO_BYTE(28*GVL.n+i-3);
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Method Name="runEveryCycle" Id="{79ccd451-642e-4685-afbb-6dd16a84c35a}">
      <Declaration><![CDATA[METHOD runEveryCycle : BOOL
VAR_INPUT
END_VAR

VAR
	


END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[(*
CASE GVL.iFRtest OF 
	0:		
		IF GVL.st_mcAxis[0].xHomingDone THEN
			IF GVL.bTs1 THEN
				GVL.st_mcAxis[0].mcMoveAbsolute.Execute := FALSE;
				GVL.iFRtest :=1;
			END_IF
		END_IF
		IF GVL.bBeltTs THEN
			G_IO.arDI[5].Ch[2] := TRUE;
			G_IO.arDI[5].Ch[3] := TRUE;
			GVL.st_mcAxis[0].mcMoveAbsolute.Execute := FALSE;
			GVL.iFRtest :=100;
		END_IF
	100:
		GVL.st_mcAxis[0].rActualPosSet := 60000000;
		GVL.st_mcAxis[0].rVelocitySet := 150;	
		GVL.st_mcAxis[0].mcMoveAbsolute.Execute := TRUE;	
		IF NOT GVL.bBeltTs THEN
			GVL.st_mcAxis[0].mcMoveAbsolute.Execute := FALSE;
			GVL.st_mcAxis[0].mcStop.Execute := TRUE;
			IF GVL.st_mcAxis[0].mcStop.Done THEN
				GVL.st_mcAxis[0].mcStop.Execute := FALSE;
				GVL.iFRtest :=0;
			END_IF
			
		END_IF
	1://open positon
		valve := FALSE;
		IF retracted THEN
			GVL.st_mcAxis[0].rActualPosSet := 102.8;
			GVL.st_mcAxis[0].rVelocitySet := 300;			
			GVL.st_mcAxis[0].mcMoveAbsolute.Execute := TRUE;
			IF GVL.st_mcAxis[0].mcMoveAbsolute.Done THEN
				GVL.st_mcAxis[0].mcMoveAbsolute.Execute := FALSE;
				GVL.iFRtest := 2;
			END_IF
		END_IF
	2://valve extend
		valve := TRUE;
		IF extended THEN
			GVL.iFRtest := 3;
		END_IF
	3://delay
		ton_delay.IN := TRUE;
		IF ton_delay.Q THEN
			ton_delay.IN := FALSE;
			GVL.iFRtest := 4;
		END_IF
	4://close position
		GVL.st_mcAxis[0].rActualPosSet := -78.4;
		GVL.st_mcAxis[0].rVelocitySet := 300;			
		GVL.st_mcAxis[0].mcMoveAbsolute.Execute := TRUE;
		IF GVL.st_mcAxis[0].mcMoveAbsolute.Done THEN
			GVL.st_mcAxis[0].mcMoveAbsolute.Execute := FALSE;
			GVL.iFRtest := 6;
		END_IF	   
	5://delay
		ton_delay.IN := TRUE;
		IF ton_delay.Q THEN
			ton_delay.IN := FALSE;
			GVL.iFRtest := 6;
		END_IF
	6://valve retract
		valve := FALSE;
		IF retracted THEN
			GVL.iFRtest := 7;
		END_IF	
	7://valve extend
		valve := TRUE;
		IF extended THEN
			GVL.iFRtest := 8;
		END_IF	
	8://delay
		ton_delay.IN := TRUE;
		IF ton_delay.Q THEN
			ton_delay.IN := FALSE;
			GVL.iFRtest := 9;
		END_IF
	9://open positon
		GVL.st_mcAxis[0].rActualPosSet := 102.8;
		GVL.st_mcAxis[0].rVelocitySet := 300;			
		GVL.st_mcAxis[0].mcMoveAbsolute.Execute := TRUE;
		IF GVL.st_mcAxis[0].mcMoveAbsolute.Done THEN
			GVL.st_mcAxis[0].mcMoveAbsolute.Execute := FALSE;
			GVL.iFRtest := 10;
		END_IF
	10:
		GVL.iFRtest := 0;
END_CASE
*)



]]></ST>
      </Implementation>
    </Method>
    <Action Name="safetyConfig" Id="{e2ea83c0-a742-46c9-9729-41e1721b92cb}">
      <Implementation>
        <ST><![CDATA[G_IO.arDO[95].Ch[2] := GVL.safetyin[28].0;//rst lamp
GVL.safetyOut[0].0	:= G_IO.arDI[95].Ch[2];//btn_rst
]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="MAIN">
      <LineId Id="449" Count="0" />
      <LineId Id="797" Count="0" />
      <LineId Id="755" Count="0" />
      <LineId Id="633" Count="0" />
      <LineId Id="670" Count="0" />
      <LineId Id="630" Count="0" />
      <LineId Id="712" Count="0" />
      <LineId Id="801" Count="0" />
      <LineId Id="1309" Count="0" />
      <LineId Id="1567" Count="0" />
      <LineId Id="985" Count="1" />
      <LineId Id="976" Count="0" />
      <LineId Id="958" Count="1" />
      <LineId Id="1055" Count="1" />
      <LineId Id="961" Count="0" />
      <LineId Id="1585" Count="2" />
      <LineId Id="1584" Count="0" />
      <LineId Id="962" Count="0" />
      <LineId Id="1045" Count="2" />
      <LineId Id="1050" Count="2" />
      <LineId Id="1048" Count="0" />
      <LineId Id="1053" Count="1" />
      <LineId Id="972" Count="0" />
      <LineId Id="969" Count="0" />
      <LineId Id="1224" Count="0" />
      <LineId Id="1226" Count="2" />
      <LineId Id="1225" Count="0" />
      <LineId Id="1229" Count="0" />
      <LineId Id="1429" Count="2" />
      <LineId Id="967" Count="0" />
      <LineId Id="1233" Count="0" />
      <LineId Id="1278" Count="2" />
      <LineId Id="1282" Count="1" />
      <LineId Id="1472" Count="1" />
      <LineId Id="1475" Count="0" />
      <LineId Id="1474" Count="0" />
      <LineId Id="1277" Count="0" />
      <LineId Id="1257" Count="0" />
      <LineId Id="1265" Count="0" />
      <LineId Id="1481" Count="0" />
      <LineId Id="1528" Count="0" />
      <LineId Id="1266" Count="0" />
      <LineId Id="1260" Count="0" />
      <LineId Id="1274" Count="0" />
      <LineId Id="1348" Count="0" />
      <LineId Id="1350" Count="0" />
      <LineId Id="1482" Count="0" />
      <LineId Id="1529" Count="0" />
      <LineId Id="1352" Count="0" />
      <LineId Id="1349" Count="0" />
      <LineId Id="1378" Count="0" />
      <LineId Id="1256" Count="0" />
      <LineId Id="1268" Count="2" />
      <LineId Id="1264" Count="0" />
      <LineId Id="1477" Count="2" />
      <LineId Id="1476" Count="0" />
      <LineId Id="1434" Count="2" />
      <LineId Id="1433" Count="0" />
      <LineId Id="1580" Count="1" />
      <LineId Id="1579" Count="0" />
      <LineId Id="1628" Count="1" />
      <LineId Id="1627" Count="0" />
      <LineId Id="1271" Count="0" />
      <LineId Id="1339" Count="0" />
      <LineId Id="1409" Count="2" />
      <LineId Id="1273" Count="0" />
      <LineId Id="1413" Count="0" />
      <LineId Id="1416" Count="1" />
      <LineId Id="1415" Count="0" />
      <LineId Id="1414" Count="0" />
      <LineId Id="1484" Count="1" />
      <LineId Id="1530" Count="0" />
      <LineId Id="1486" Count="1" />
      <LineId Id="1483" Count="0" />
      <LineId Id="1488" Count="2" />
      <LineId Id="1531" Count="0" />
      <LineId Id="1491" Count="1" />
      <LineId Id="1412" Count="0" />
      <LineId Id="1569" Count="4" />
      <LineId Id="1630" Count="0" />
      <LineId Id="1632" Count="2" />
      <LineId Id="1631" Count="0" />
      <LineId Id="1578" Count="0" />
      <LineId Id="928" Count="0" />
      <LineId Id="1307" Count="1" />
      <LineId Id="1346" Count="1" />
      <LineId Id="1425" Count="0" />
      <LineId Id="1336" Count="0" />
      <LineId Id="1427" Count="0" />
      <LineId Id="1426" Count="0" />
      <LineId Id="1568" Count="0" />
      <LineId Id="1588" Count="0" />
      <LineId Id="900" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.agingTestConfig">
      <LineId Id="121" Count="26" />
      <LineId Id="120" Count="0" />
      <LineId Id="2" Count="117" />
      <LineId Id="1" Count="0" />
      <LineId Id="149" Count="0" />
      <LineId Id="152" Count="0" />
      <LineId Id="148" Count="0" />
      <LineId Id="153" Count="1" />
      <LineId Id="162" Count="1" />
      <LineId Id="156" Count="0" />
      <LineId Id="165" Count="1" />
      <LineId Id="164" Count="0" />
      <LineId Id="168" Count="1" />
      <LineId Id="167" Count="0" />
      <LineId Id="171" Count="1" />
      <LineId Id="170" Count="0" />
      <LineId Id="174" Count="1" />
      <LineId Id="173" Count="0" />
      <LineId Id="177" Count="1" />
      <LineId Id="176" Count="0" />
      <LineId Id="180" Count="1" />
      <LineId Id="179" Count="0" />
      <LineId Id="183" Count="1" />
      <LineId Id="182" Count="0" />
      <LineId Id="186" Count="1" />
      <LineId Id="185" Count="0" />
      <LineId Id="198" Count="2" />
      <LineId Id="197" Count="0" />
      <LineId Id="202" Count="0" />
      <LineId Id="201" Count="0" />
      <LineId Id="204" Count="0" />
      <LineId Id="203" Count="0" />
      <LineId Id="206" Count="0" />
      <LineId Id="205" Count="0" />
      <LineId Id="208" Count="0" />
      <LineId Id="207" Count="0" />
      <LineId Id="210" Count="0" />
      <LineId Id="209" Count="0" />
      <LineId Id="212" Count="0" />
      <LineId Id="211" Count="0" />
      <LineId Id="214" Count="0" />
      <LineId Id="213" Count="0" />
      <LineId Id="216" Count="0" />
      <LineId Id="215" Count="0" />
      <LineId Id="221" Count="0" />
      <LineId Id="220" Count="0" />
      <LineId Id="223" Count="8" />
      <LineId Id="236" Count="0" />
      <LineId Id="235" Count="0" />
      <LineId Id="243" Count="0" />
      <LineId Id="242" Count="0" />
      <LineId Id="234" Count="0" />
      <LineId Id="244" Count="8" />
      <LineId Id="233" Count="0" />
      <LineId Id="254" Count="0" />
      <LineId Id="253" Count="0" />
      <LineId Id="267" Count="0" />
      <LineId Id="266" Count="0" />
      <LineId Id="232" Count="0" />
      <LineId Id="261" Count="4" />
      <LineId Id="268" Count="4" />
      <LineId Id="260" Count="0" />
      <LineId Id="273" Count="10" />
      <LineId Id="218" Count="0" />
      <LineId Id="284" Count="10" />
      <LineId Id="217" Count="0" />
      <LineId Id="295" Count="10" />
      <LineId Id="194" Count="0" />
      <LineId Id="307" Count="10" />
      <LineId Id="306" Count="0" />
      <LineId Id="318" Count="10" />
      <LineId Id="157" Count="0" />
      <LineId Id="330" Count="10" />
      <LineId Id="329" Count="0" />
      <LineId Id="342" Count="10" />
      <LineId Id="341" Count="0" />
      <LineId Id="354" Count="10" />
      <LineId Id="353" Count="0" />
      <LineId Id="366" Count="10" />
      <LineId Id="365" Count="0" />
      <LineId Id="158" Count="3" />
      <LineId Id="155" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.M_ads_bagmachines">
      <LineId Id="37" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="82" Count="24" />
      <LineId Id="81" Count="0" />
      <LineId Id="38" Count="1" />
      <LineId Id="47" Count="0" />
      <LineId Id="72" Count="0" />
      <LineId Id="74" Count="0" />
      <LineId Id="73" Count="0" />
      <LineId Id="46" Count="0" />
      <LineId Id="75" Count="0" />
      <LineId Id="77" Count="1" />
      <LineId Id="111" Count="0" />
      <LineId Id="79" Count="0" />
      <LineId Id="76" Count="0" />
      <LineId Id="80" Count="0" />
      <LineId Id="107" Count="3" />
      <LineId Id="32" Count="0" />
      <LineId Id="115" Count="4" />
      <LineId Id="113" Count="0" />
      <LineId Id="41" Count="0" />
      <LineId Id="122" Count="0" />
      <LineId Id="124" Count="0" />
      <LineId Id="120" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.M_agingTest">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.M_checkError">
      <LineId Id="9" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="6" Count="1" />
      <LineId Id="12" Count="1" />
      <LineId Id="8" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.M_mappingIO">
      <LineId Id="322" Count="0" />
      <LineId Id="212" Count="5" />
      <LineId Id="219" Count="0" />
      <LineId Id="218" Count="0" />
      <LineId Id="220" Count="1" />
      <LineId Id="223" Count="1" />
      <LineId Id="230" Count="0" />
      <LineId Id="225" Count="0" />
      <LineId Id="289" Count="2" />
      <LineId Id="273" Count="0" />
      <LineId Id="292" Count="2" />
      <LineId Id="274" Count="0" />
      <LineId Id="295" Count="0" />
      <LineId Id="275" Count="0" />
      <LineId Id="297" Count="0" />
      <LineId Id="296" Count="0" />
      <LineId Id="298" Count="3" />
      <LineId Id="226" Count="0" />
      <LineId Id="229" Count="0" />
      <LineId Id="232" Count="0" />
      <LineId Id="222" Count="0" />
      <LineId Id="309" Count="2" />
      <LineId Id="303" Count="0" />
      <LineId Id="312" Count="2" />
      <LineId Id="305" Count="0" />
      <LineId Id="315" Count="0" />
      <LineId Id="306" Count="0" />
      <LineId Id="316" Count="2" />
      <LineId Id="307" Count="0" />
      <LineId Id="319" Count="1" />
      <LineId Id="308" Count="0" />
      <LineId Id="243" Count="1" />
      <LineId Id="246" Count="0" />
      <LineId Id="245" Count="0" />
      <LineId Id="247" Count="3" />
      <LineId Id="242" Count="0" />
      <LineId Id="255" Count="0" />
      <LineId Id="254" Count="0" />
      <LineId Id="264" Count="2" />
      <LineId Id="260" Count="0" />
      <LineId Id="328" Count="0" />
      <LineId Id="324" Count="0" />
      <LineId Id="329" Count="0" />
      <LineId Id="325" Count="0" />
      <LineId Id="330" Count="0" />
      <LineId Id="326" Count="0" />
      <LineId Id="331" Count="0" />
      <LineId Id="327" Count="0" />
      <LineId Id="336" Count="2" />
      <LineId Id="333" Count="0" />
      <LineId Id="323" Count="0" />
      <LineId Id="253" Count="0" />
      <LineId Id="252" Count="0" />
      <LineId Id="256" Count="0" />
      <LineId Id="251" Count="0" />
      <LineId Id="267" Count="2" />
      <LineId Id="233" Count="0" />
      <LineId Id="350" Count="0" />
      <LineId Id="340" Count="0" />
      <LineId Id="351" Count="0" />
      <LineId Id="341" Count="0" />
      <LineId Id="352" Count="0" />
      <LineId Id="342" Count="0" />
      <LineId Id="353" Count="2" />
      <LineId Id="343" Count="0" />
      <LineId Id="356" Count="0" />
      <LineId Id="345" Count="1" />
      <LineId Id="339" Count="0" />
      <LineId Id="271" Count="0" />
      <LineId Id="270" Count="0" />
      <LineId Id="358" Count="0" />
      <LineId Id="370" Count="1" />
      <LineId Id="359" Count="0" />
      <LineId Id="357" Count="0" />
      <LineId Id="365" Count="1" />
      <LineId Id="363" Count="0" />
      <LineId Id="372" Count="0" />
      <LineId Id="181" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.M_measuringLC">
      <LineId Id="34" Count="1" />
      <LineId Id="5" Count="2" />
      <LineId Id="14" Count="0" />
      <LineId Id="19" Count="7" />
      <LineId Id="17" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="11" Count="1" />
    </LineIds>
    <LineIds Name="MAIN.M_ReM">
      <LineId Id="60" Count="0" />
      <LineId Id="6" Count="0" />
      <LineId Id="14" Count="6" />
      <LineId Id="22" Count="1" />
      <LineId Id="191" Count="0" />
      <LineId Id="24" Count="11" />
      <LineId Id="5" Count="0" />
      <LineId Id="181" Count="2" />
      <LineId Id="185" Count="1" />
      <LineId Id="184" Count="0" />
      <LineId Id="37" Count="10" />
      <LineId Id="190" Count="0" />
      <LineId Id="48" Count="11" />
      <LineId Id="36" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="187" Count="2" />
      <LineId Id="63" Count="9" />
      <LineId Id="92" Count="0" />
      <LineId Id="95" Count="0" />
      <LineId Id="154" Count="0" />
      <LineId Id="97" Count="0" />
      <LineId Id="156" Count="1" />
      <LineId Id="155" Count="0" />
      <LineId Id="98" Count="1" />
      <LineId Id="158" Count="0" />
      <LineId Id="100" Count="2" />
      <LineId Id="108" Count="6" />
      <LineId Id="176" Count="4" />
      <LineId Id="161" Count="0" />
      <LineId Id="159" Count="0" />
      <LineId Id="162" Count="3" />
      <LineId Id="121" Count="0" />
      <LineId Id="138" Count="6" />
      <LineId Id="166" Count="9" />
      <LineId Id="151" Count="2" />
      <LineId Id="61" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.M_reset">
      <LineId Id="50" Count="0" />
      <LineId Id="6" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="40" Count="1" />
      <LineId Id="18" Count="0" />
      <LineId Id="24" Count="1" />
      <LineId Id="23" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="32" Count="2" />
      <LineId Id="58" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="49" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.M_rfid">
      <LineId Id="58" Count="0" />
      <LineId Id="6" Count="0" />
      <LineId Id="39" Count="7" />
      <LineId Id="32" Count="6" />
      <LineId Id="25" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="48" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="49" Count="1" />
    </LineIds>
    <LineIds Name="MAIN.runEveryCycle">
      <LineId Id="216" Count="0" />
      <LineId Id="82" Count="0" />
      <LineId Id="87" Count="0" />
      <LineId Id="95" Count="0" />
      <LineId Id="191" Count="0" />
      <LineId Id="132" Count="0" />
      <LineId Id="96" Count="0" />
      <LineId Id="192" Count="0" />
      <LineId Id="97" Count="0" />
      <LineId Id="193" Count="0" />
      <LineId Id="201" Count="1" />
      <LineId Id="196" Count="0" />
      <LineId Id="194" Count="1" />
      <LineId Id="119" Count="0" />
      <LineId Id="121" Count="0" />
      <LineId Id="120" Count="0" />
      <LineId Id="122" Count="0" />
      <LineId Id="197" Count="0" />
      <LineId Id="200" Count="0" />
      <LineId Id="203" Count="1" />
      <LineId Id="207" Count="0" />
      <LineId Id="205" Count="1" />
      <LineId Id="198" Count="1" />
      <LineId Id="90" Count="0" />
      <LineId Id="174" Count="1" />
      <LineId Id="98" Count="1" />
      <LineId Id="93" Count="0" />
      <LineId Id="100" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="101" Count="1" />
      <LineId Id="176" Count="0" />
      <LineId Id="125" Count="2" />
      <LineId Id="133" Count="1" />
      <LineId Id="137" Count="1" />
      <LineId Id="140" Count="0" />
      <LineId Id="143" Count="0" />
      <LineId Id="141" Count="1" />
      <LineId Id="91" Count="0" />
      <LineId Id="103" Count="3" />
      <LineId Id="109" Count="0" />
      <LineId Id="107" Count="0" />
      <LineId Id="94" Count="0" />
      <LineId Id="135" Count="0" />
      <LineId Id="145" Count="3" />
      <LineId Id="144" Count="0" />
      <LineId Id="149" Count="0" />
      <LineId Id="153" Count="2" />
      <LineId Id="152" Count="0" />
      <LineId Id="160" Count="0" />
      <LineId Id="162" Count="2" />
      <LineId Id="161" Count="0" />
      <LineId Id="178" Count="4" />
      <LineId Id="177" Count="0" />
      <LineId Id="167" Count="6" />
      <LineId Id="166" Count="0" />
      <LineId Id="92" Count="0" />
      <LineId Id="89" Count="0" />
      <LineId Id="88" Count="0" />
      <LineId Id="45" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="79" Count="1" />
      <LineId Id="38" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.safetyConfig">
      <LineId Id="3" Count="0" />
      <LineId Id="1" Count="0" />
      <LineId Id="4" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>
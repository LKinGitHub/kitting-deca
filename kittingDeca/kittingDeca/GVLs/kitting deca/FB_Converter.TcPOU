<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_Converter" Id="{50ef3601-3b6d-4adf-a463-ac58da8032a1}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Converter 
VAR_INPUT
	
	iMotor	: WORD;
	bSetParaEx	: BOOL;
	cmd  AT%Q*	: UINT;
	freq AT%Q*	: UINT;

	reset	: BOOL;
END_VAR
VAR_OUTPUT
	status	AT%I*	:  UINT;//Bit0：运行状态；Bit1：正反转状态；Bit2：是否发生故障
							//Bit3：输出频率是否到达设定频率；Bit4：通信正常标志；
							//Bit5~Bit7：保留；Bit8~Bit15：故障主码
	running_freq	AT%I*	:  UINT;
	xErr	:  BOOL;
	errorID	: UINT;
	xDone	: BOOL;
END_VAR
VAR_IN_OUT
	stConverter	: ST_Converter;
	//sNetID : STRING;
	//nSlaveAddr	:UINT;
	
END_VAR
VAR
	iCase	: INT;
	i : INT;
	CoeWrt		:	FB_EcCoESdoWrite;
	nSubIndex	: BYTE;
	nIndex		: WORD;
	iSdoWrite	: INT; 
	offset: WORD;
	rtrig_bSetPara	: R_TRIG;
	rtrig_bReset	: R_TRIG;
	ton_delay	: TON;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[xDone	:= FALSE; 
CoeWrt(
	sNetId:= stConverter.sNetID, 
	nSlaveAddr:=stConverter.nSlaveAddr, 
	nSubIndex:= nSubIndex, 
	nIndex:= nIndex, 
	pSrcBuf:= ADR(iSdoWrite), 
	cbBufLen:= SIZEOF(iSdoWrite), 
	bExecute:= , 
	tTimeout:= , 
	bBusy=> , 
	bError=> , 
	nErrId=> );

(*
addr		valve					comment	
整流单元								
FD-10		3					通信协议选择(面板设定)	
逆变单元								
F0:02		2					control mode	
F0:03		2					command source selection	
F0:04		9					main frequency source X selection	
F0:0B		6000					maximum frequency	
F0:0D		6000					frequency upper limit	
F0:12		5					acceleration time 1	
F0:13		5					deceleration time 1	
F0:14		1					acceleration/deceleration time unit	
F1:01		1					motor type	
F1:02		1					rated motor power	
F1:03		220					rated motor voltage	
F1:04		6					rated motor current	
F1:05		6000					rated motor frequency	
F1:06		1600					rated motor speed	
*)

offset	:= 16#800*iMotor;
//control mode
stConverter.nIndex[0]	:= 16#20F0+offset;
stConverter.nSubIndex[0]	:= 16#02;
stConverter.iSdoWrite[0]	:= 2;
//command source selection
stConverter.nIndex[1]	:= 16#20F0+offset;
stConverter.nSubIndex[1]	:= 16#03;
stConverter.iSdoWrite[1]	:= 2;
//main frequency source X selection
stConverter.nIndex[2]	:= 16#20F0+offset;
stConverter.nSubIndex[2]	:= 16#04;
stConverter.iSdoWrite[2]	:= 9;
//maximum frequency
stConverter.nIndex[3]	:= 16#20F0+offset;
stConverter.nSubIndex[3]	:= 16#0B;
stConverter.iSdoWrite[3]	:= 6000;
//frequency upper limit
stConverter.nIndex[4]	:= 16#20F0+offset;
stConverter.nSubIndex[4]	:= 16#0D;
stConverter.iSdoWrite[4]	:= 6000;
//acceleration time 1
stConverter.nIndex[5]	:= 16#20F0+offset;
stConverter.nSubIndex[5]	:= 16#12;
stConverter.iSdoWrite[5]	:= 5;
//deceleration time 1
stConverter.nIndex[6]	:= 16#20F0+offset;
stConverter.nSubIndex[6]	:= 16#13;
stConverter.iSdoWrite[6]	:= 5;
//acceleration/deceleration time unit	
stConverter.nIndex[7]	:= 16#20F0+offset;
stConverter.nSubIndex[7]	:= 16#14;
stConverter.iSdoWrite[7]	:= 1;
//motor type	
stConverter.nIndex[8]	:= 16#20F1+offset;
stConverter.nSubIndex[8]	:= 16#01;
stConverter.iSdoWrite[8]	:= 1;
//rated motor power	
stConverter.nIndex[9]	:= 16#20F1+offset;
stConverter.nSubIndex[9]	:= 16#02;
stConverter.iSdoWrite[9]	:= 1;
//rated motor voltage		
stConverter.nIndex[10]	:= 16#20F1+offset;
stConverter.nSubIndex[10]	:= 16#03;
stConverter.iSdoWrite[10]	:= 220;
//rated motor current		
stConverter.nIndex[11]	:= 16#20F1+offset;
stConverter.nSubIndex[11]	:= 16#04;
stConverter.iSdoWrite[11]	:= 6;
//rated motor frequency		
stConverter.nIndex[12]	:= 16#20F1+offset;
stConverter.nSubIndex[12]	:= 16#05;
stConverter.iSdoWrite[12]	:= 6000;
//rated motor speed		
stConverter.nIndex[13]	:= 16#20F1+offset;
stConverter.nSubIndex[13]	:= 16#06;
stConverter.iSdoWrite[13]	:= 1600;

ton_delay(PT:= T#0.1S);
rtrig_bSetPara(CLK:=bSetParaEx);
rtrig_bReset(CLK:=reset);
CASE iCase OF
	0:
		CoeWrt.bExecute	:= FALSE;
		ton_delay.IN	:= FALSE;
		i:=0;
		xDone	:= FALSE;
		IF rtrig_bSetPara.Q THEN
			iCase	:= 1;
		END_IF	
		IF rtrig_bReset.Q THEN
			iCase	:= 10;
		END_IF				
	1: 
		nIndex	:= stConverter.nIndex[i];
		nSubIndex	:= stConverter.nSubIndex[i];
		iSdoWrite	:= stConverter.iSdoWrite[i];
		i	:= i+1;
		CoeWrt.bExecute	:= TRUE;
		iCase	:= 2;
	2:
		ton_delay.IN	:= TRUE;
		IF ton_delay.Q THEN
			iCase	:= 3;
		END_IF		
	3:
		ton_delay.IN	:= FALSE;
		CoeWrt.bExecute	:= FALSE;
		IF i >13 THEN
			iCase	:= 0;
			xDone	:= TRUE;
			//RETURN ;
		ELSE
			iCase	:= 1;
		END_IF	
	10: 
		IF status.2 THEN
			cmd	:=INT_TO_UINT(E_CMD_ConverterMotor.RESET);
		END_IF
		iCase	:= 11;
	11:
		ton_delay.IN	:= TRUE;
		IF ton_delay.Q THEN
			iCase	:= 0;
		END_IF		
END_CASE


xErr	:= status.2 ;

errorID	:= SHR(status,8);
]]></ST>
    </Implementation>
    <Method Name="M_SetPara" Id="{91f69ed3-b089-494c-b183-d69bb531850e}">
      <Declaration><![CDATA[METHOD M_SetPara : BOOL
VAR_INPUT
	//iMotor	: WORD;
	
END_VAR
VAR_IN_OUT
	
END_VAR
VAR

END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
(*FOR i:=0 TO 13 DO
	nIndex	:= stConverter.nIndex[i];
	nSubIndex	:= stConverter.nSubIndex[i];
	iSdoWrite	:= stConverter.iSdoWrite[i];
	CoeWrt.bExecute	:= TRUE;
END_FOR*)

]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_Converter">
      <LineId Id="190" Count="0" />
      <LineId Id="20" Count="10" />
      <LineId Id="9" Count="0" />
      <LineId Id="65" Count="20" />
      <LineId Id="179" Count="0" />
      <LineId Id="178" Count="0" />
      <LineId Id="86" Count="40" />
      <LineId Id="182" Count="0" />
      <LineId Id="128" Count="13" />
      <LineId Id="143" Count="1" />
      <LineId Id="187" Count="0" />
      <LineId Id="233" Count="0" />
      <LineId Id="145" Count="5" />
      <LineId Id="177" Count="0" />
      <LineId Id="184" Count="1" />
      <LineId Id="234" Count="1" />
      <LineId Id="231" Count="0" />
      <LineId Id="152" Count="7" />
      <LineId Id="161" Count="13" />
      <LineId Id="236" Count="0" />
      <LineId Id="240" Count="2" />
      <LineId Id="249" Count="0" />
      <LineId Id="244" Count="0" />
      <LineId Id="246" Count="2" />
      <LineId Id="245" Count="0" />
      <LineId Id="142" Count="0" />
      <LineId Id="222" Count="0" />
      <LineId Id="41" Count="0" />
      <LineId Id="220" Count="1" />
      <LineId Id="223" Count="0" />
      <LineId Id="225" Count="0" />
    </LineIds>
    <LineIds Name="FB_Converter.M_SetPara">
      <LineId Id="102" Count="0" />
      <LineId Id="100" Count="0" />
      <LineId Id="103" Count="0" />
      <LineId Id="105" Count="2" />
      <LineId Id="104" Count="0" />
      <LineId Id="139" Count="0" />
      <LineId Id="112" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>